"""Read the sp2 files from balder and producing spectra in the air"""
from readsp import readsp
from readdet import readdet
from readieJack import readie
import specutils
import numpy as np
from specutils import analysis
from specutils import Spectrum1D
import matplotlib.pyplot as plt
import astropy.units as u
from scipy.interpolate import UnivariateSpline
import pickle

Mode = "avrg_xy"
rtc = 1.0973731569E5  # Conversion factor between Rydberg and cm^(-1)
rte = 13.605698  # Conversion factor between Rydberg and eV

# which stellar atmos are we looking at
star_number = 3
            #  0        1          2          3         4        5                 6               7     8(10% electron rates)     9    10                      11                  12              13
star_list = ['sun', 'Arcturus', '122563', '140283', '84937', "140283Karin", "arcturusKarin", "122563_3D", "122563_10th", "122563_100th", "122563_0kaulakys", "Arcturus_100th", "Arcturus_10th", "Arcturus_0electrons"
    , "Sun_0kaulakys100electrons", "Arcturus_0kaulakys100electrons", "140283_0kaulakys100electrons",     "84397_0kaulakys100electrons", "122563_0kaulakys100electrons", "chris"]
        # 14                             15                              16                                       17                          18
star = star_list[star_number]

# Which atom/LTE version are we running? Need all four. Should find a way to run all 4 automatically..
ti2l = [False, True]
ltel = [False, True]
for ti2 in ti2l:
    for lte in ltel:
        # abundances = [["445", "455", "460", "470", "480", "485", "490", "495", "502", "520", "545"]]
        # k0001
        k = "0001"
        # ["200", "220", "230", "240", "250", "260", "270", "280"]
        # WE did more abundances for the sun at k=0.005
        # abunds for sun, arcturus, 122563, 140283, and 84937
        abundances_all = [["450", "460", "480", "490", "500"], ["460", "470", "490", "500"],
                          ["200", "220",  "230", "250", "270"],
                          ["300", "270", "280", "300"], ["290", "310", "320", "330"],
                          ["250", "260", "270", "280", "290", "300"], ["460", "470", "490", "500"],
                          ["200", "220", "230", "240", "250", "260"], ["210", "230", "250", "270"],
                          ["210", "230", "250", "270"], ["210", "230", "250", "270"], ["460", "480", "500"],
                          ["460", "480", "500"], ["460", "480", "500"],
                          ["450", "460", "480", "490", "510"], ["460", "470", "490", "500"], ["250", "270", "280", "300"], ["280", "290", "300", "320", "330"], ["210", "230", "250", "270"],
                          ["265", "270", "275", "280", "290"]]
        abundances_string = abundances_all[star_number]
        abundances = [float(abund) / 100 for abund in abundances_string]

        # saving all abundances to run in a different program
        abund_dict = {}


        # needs to be in AA, not nm
        def Vac2Air(wavelength):
            # Vac2Air. Changes wavelengths.

            vac = wavelength
            s = 10 ** 4 / vac
            res = vac / (1 + 0.0000834254 + 0.02406147 / (130 - s ** 2) + 0.00015998 / (38.9 - s ** 2))
            air_wave = res

            return air_wave

        def backupget_scott_data():
                # don'#t forget it takes indentation as text space!
                if not ti2:
                    scott_data = """428.1363 (4 F)4s 5 F1 (4 F)4p 5 D2 0.813 -1.260 2 2.40 1 4.787 4.856 4.938 4.825 4.878 +0.056 4.843
        446.5805 (4 P)4s 5 P2 (4 P)4p 5 P3 1.739 -0.130 2 3.56 2 4.829 4.862 4.933 4.822 4.886 +0.050 4.879
        511.3439 (4 F)4s 3 F3 (3 P)4sp 3 D2 1.443 -0.700 2 2.45 2 4.782 4.838 4.912 4.802 4.860 +0.049 4.831
        514.5459 (4 F)4s 3 F4 (3 P)4sp 3 D3 1.460 -0.540 2 3.31 1 4.838 4.884 4.959 4.845 4.904 +0.048 4.886
        514.7477 4s2 3 F2 (3 F)4sp 3 F3 0.000 -1.940 2 3.46 1 4.781 4.871 4.968 4.840 4.882 +0.086 4.867
        515.2184 4s2 3 F3 (3 F)4sp 3 F4 0.021 -1.950 2 3.32 2 4.782 4.873 4.970 4.843 4.885 +0.084 4.866
        521.9699 4s2 3 F3 (3 F)4sp 3 F2 0.021 -2.220 2 2.24 2 4.783 4.896 4.991 4.868 4.909 +0.081 4.864
        525.2098 4s2 3 F4 (3 F)4sp 3 F3 0.048 -2.360 4 1.64 1 4.768 4.890 4.984 4.863 4.905 +0.079 4.847
        529.5774 4s2 3 P2 (1 D)4sp 3 D3 1.067 -1.590 2 1.06 2 4.824 4.907 4.984 4.875 4.927 +0.065 4.889
        549.0147 (4 F)4s 3 F4 (4 F)4p 5 D3 1.460 -0.840 2 2.03 1 4.795 4.857 4.929 4.821 4.878 +0.051 4.846
        586.6429a 4s2 3 P2 (4 F)4p 3 D3 1.067 -0.790 2 4.46 2 4.833 4.887 4.971 4.849 4.899 +0.042 4.875
        592.2088a 4s2 3 P0 (4 F)4p 3 D1 1.046 -1.380 2 1.79 2 4.802 4.886 4.964 4.853 4.903 +0.048 4.850
        609.2789 (2 G)4s 3 G5 (4 F)4p 3 G5 1.887 -1.380 2 0.36 2 4.881 4.942 5.008 4.909 4.964 +0.057 4.938
        630.3753 (4 F)4s 3 F3 (3 F)4sp 3 G3 1.443 -1.580 2 0.68 1 4.912 4.986 5.061 4.955 5.004 +0.056 4.968
        631.2234 (4 F)4s 3 F4 (3 F)4sp 3 G4 1.460 -1.550 2 0.68 2 4.892 4.966 5.040 4.935 4.985 +0.055 4.947
        735.7726 (4 F)4s 3 F3 (3 F)4sp 3 F3 1.443 -1.020 2 1.99 2 4.814 4.886 4.960 4.854 4.901 +0.054 4.868"""

                else:
                    scott_data = """449.3525a (1 D)4s 2 D 32 (3 F)4p 4 F 52 1.080 -2.780 7 3.18 1 4.897 4.887 4.916 4.862 4.920
        458.3396a 3d3 4 P 32 (3 F)4p 2 F 52 1.165 -2.840 7 3.02 2 4.985 4.977 5.005 4.953 5.010
        460.9253a 3d3 4 P 52 (3 F)4p 2 F 52 1.180 -3.320 7 1.16 1 4.933 4.932 4.959 4.914 4.966
        471.9533 (3 P)4s 4 P 52 (3 F)4p 2 F 52 1.243 -3.320 7 1.22 1 5.013 5.011 5.038 4.993 5.043
        476.4518a 3d3 2 P 32 (3 F)4p 4 F 52 1.237 -2.690 7 3.35 1 4.968 4.956 4.982 4.928 4.989
        479.8535a (1 D)4s 2 D 32 (3 F)4p 4 G 52 1.080 -2.660 7 4.29 1 4.990 4.970 4.997 4.937 5.001
        486.5597a 3d3 2 G 72 (3 F)4p 4 G 52 1.116 -2.700 7 3.50 1 4.877 4.866 4.893 4.838 4.898"""
                ewlist = []

                wllist = []
                nlte3dlist = []
                ltelist = []
                for line in (scott_data.split("\n")):
                    scott_split = line.split(" ")
                    print(scott_split)
                    # skip lines with "a" in it
                    if "a" in scott_split[0] and not ti2:
                        continue
                    elif "a" in scott_split[0] and ti2:
                        scott_split[0] = scott_split[0][:-1]
                    # turn from nm in AA
                    wl = float(scott_split[0]) * 10
                    wllist.append(wl)
                    if ti2:
                        ew = float(scott_split[-7])
                    elif not ti2:
                        ew = float(scott_split[-9])
                    # To AA from pico
                    ew = ew / 100
                    ewlist.append(ew)

                    nlte3d = float(scott_split[-1])
                    nlte3dlist.append(nlte3d)
                    lte = float(scott_split[-4])
                    ltelist.append(lte)

                return wllist, ewlist, nlte3dlist, ltelist


        # get line data and abuynd data from pat scott copy pasted text string
        def get_scott_data():
            # don'#t forget it takes indentation as text space!
            if not ti2:
                scott_data = """428.1363 (4F)4s 5F1 (4F)4p 5D2 0.813 −1.260 2 2.40 1 4.787 4.856 4.938 4.825 4.878 +0.056 4.843
446.5805 (4P)4s 5P2 (4P)4p 5P3 1.739 −0.130 2 3.56 2 4.829 4.862 4.933 4.822 4.886 +0.050 4.879
475.8118 (2H)4s 3H5 (2H)4p 3H5 2.249 0.510 2 4.18 3 4.792 4.809 4.876 4.763 4.832 +0.053 4.845
475.9269 (2H)4s 3H6 (2H)4p 3H6 2.256 0.590 2 4.60 2 4.810 4.821 4.889 4.772 4.842 +0.053 4.863
496.4715 (3F)4sp 5G2 4s(4F)5s 5F2 1.969 −0.820 3 0.77 2 4.826 4.880 4.942 4.845 4.905 +0.060 4.886
502.2866 (4F)4s 5F3 (4F)4p 5G3 0.826 −0.330 2 6.99 1 4.817 4.804 4.896 4.753 4.808 +0.065 4.882
511.3439 (4F)4s 3F3 (3P)4sp 3D2 1.443 −0.700 2 2.45 2 4.782 4.838 4.912 4.802 4.860 +0.049 4.831
514.5459 (4F)4s 3F4 (3P)4sp 3D3 1.460 −0.540 2 3.31 1 4.838 4.884 4.959 4.845 4.904 +0.048 4.886
514.7477 4s2 3F2 (3F)4sp 3F3 0.000 −1.940 2 3.46 1 4.781 4.871 4.968 4.840 4.882 +0.086 4.867
515.2184 4s2 3F3 (3F)4sp 3F4 0.021 −1.950 2 3.32 2 4.782 4.873 4.970 4.843 4.885 +0.084 4.866
521.9699 4s2 3F3 (3F)4sp 3F2 0.021 −2.220 2 2.24 2 4.783 4.896 4.991 4.868 4.909 +0.081 4.864
522.3620 (3F)4sp 5F2 4s(4F)5s 5F2 2.092 −0.490 2 1.22 1 4.824 4.874 4.935 4.836 4.899 +0.054 4.878
524.7288 (3F)4sp 5F3 4s(4F)5s 5F2 2.103 −0.640 3 0.85 1 4.802 4.853 4.914 4.817 4.879 +0.057 4.859
525.2098 4s2 3F4 (3F)4sp 3F3 0.048 −2.360 4 1.64 1 4.768 4.890 4.984 4.863 4.905 +0.079 4.847
529.5774 4s2 3P2 (1D)4sp 3D3 1.067 −1.590 2 1.06 2 4.824 4.907 4.984 4.875 4.927 +0.065 4.889
549.0147 (4F)4s 3F4 (4F)4p 5D3 1.460 −0.840 2 2.03 1 4.795 4.857 4.929 4.821 4.878 +0.051 4.846
566.2147 (3F)4sp 5D4 4s(4F)5s 5F5 2.318 0.010 3 2.12 1 4.802 4.843 4.903 4.802 4.866 +0.057 4.859
568.9459 (3F)4sp 5D2 4s(4F)5s 5F3 2.297 −0.360 3 1.13 1 4.824 4.871 4.930 4.833 4.896 +0.058 4.882
570.2658 (3F)4sp 5D1 4s(4F)5s 5F2 2.292 −0.590 3 0.70 1 4.815 4.864 4.922 4.827 4.889 +0.059 4.874
571.6441 (3F)4sp 5D2 4s(4F)5s 5F2 2.297 −0.720 3 0.54 1 4.828 4.878 4.935 4.841 4.903 +0.058 4.886
586.6429a 4s2 3P2 (4F)4p 3D3 1.067 −0.790 2 4.46 2 4.833 4.887 4.971 4.849 4.899 +0.042 4.875
592.2088a 4s2 3P0 (4F)4p 3D1 1.046 −1.380 2 1.79 2 4.802 4.886 4.964 4.853 4.903 +0.048 4.850
609.2789 (2G)4s 3G5 (4F)4p 3G5 1.887 −1.380 2 0.36 2 4.881 4.942 5.008 4.909 4.964 +0.057 4.938
625.8099 (4F)4s 3F3 (3F)4sp 3G4 1.443 −0.390 2 5.05 3 4.912 4.943 5.023 4.901 4.952 +0.045 4.957
630.3753 (4F)4s 3F3 (3F)4sp 3G3 1.443 −1.580 2 0.68 1 4.912 4.986 5.061 4.955 5.004 +0.056 4.968
631.2234 (4F)4s 3F4 (3F)4sp 3G4 1.460 −1.550 2 0.68 2 4.892 4.966 5.040 4.935 4.985 +0.055 4.947
659.9104 4s2 1D2 (3F)4sp 1F3 0.900 −2.029 5 0.80 2 4.857 4.955 5.038 4.927 4.970 +0.083 4.940
735.7726 (4F)4s 3F3 (3F)4sp 3F3 1.443 −1.020 2 1.99 2 4.814 4.886 4.960 4.854 4.901 +0.054 4.868
842.6504 (4F)4s 5F3 (3F)4sp 5D2 0.826 −1.197 6 4.66 2 4.832 4.903 4.992 4.871 4.904 +0.071 4.903
843.5648 (4F)4s 5F4 (3F)4sp 5D3 0.836 −0.967 6 5.76 1 4.805 4.859 4.951 4.825 4.855 +0.073 4.878
867.5371 4s2 3P2 (3F)4sp 3D3 1.067 −1.500 2 1.85 2 4.774 4.869 4.948 4.838 4.880 +0.075 4.849
868.2979 4s2 3P1 (3F)4sp 3D2 1.053 −1.790 2 1.07 2 4.773 4.876 4.954 4.846 4.888 +0.075 4.848
869.2328 4s2 3P0 (3F)4sp 3D1 1.046 −2.130 2 0.52 2 4.765 4.874 4.951 4.845 4.887 +0.074 4.839
873.4711 4s2 3P1 (3F)4sp 3D1 1.053 −2.240 2 0.41 1 4.771 4.880 4.957 4.851 4.894 +0.075 4.846"""

            else:
                scott_data = """440.9520 (3P)4s 4P 32 (3F)4p 4D 32 1.231 −2.530 7 3.81 2 4.938 4.923 4.951 4.894 4.956
444.4524a 3d3 2G 72 (3F)4p 2F 72 1.116 −2.200 7 5.99 1 4.960 4.923 4.952 4.881 4.951
449.3525a (1D)4s 2D 32 (3F)4p 4F 52 1.080 −2.780 7 3.18 1 4.897 4.887 4.916 4.862 4.920
458.3396a 3d3 4P 32 (3F)4p 2F 52 1.165 −2.840 7 3.02 2 4.985 4.977 5.005 4.953 5.010
460.9253a 3d3 4P 52 (3F)4p 2F 52 1.180 −3.320 7 1.16 1 4.933 4.932 4.959 4.914 4.966
465.7212 (3P)4s 4P 52 (3F)4p 2F 72 1.243 −2.290 7 5.18 1 4.988 4.956 4.983 4.917 4.986
470.8656a 3d3 2P 32 (3F)4p 2F 52 1.237 −2.350 7 5.06 1 4.951 4.923 4.949 4.885 4.953
471.9533 (3P)4s 4P 52 (3F)4p 2F 52 1.243 −3.320 7 1.22 1 5.013 5.011 5.038 4.993 5.043
476.4518a 3d3 2P 32 (3F)4p 4F 52 1.237 −2.690 7 3.35 1 4.968 4.956 4.982 4.928 4.989
479.8535a (1D)4s 2D 32 (3F)4p 4G 52 1.080 −2.660 7 4.29 1 4.990 4.970 4.997 4.937 5.001
486.5597a 3d3 2G 72 (3F)4p 4G 52 1.116 −2.700 7 3.50 1 4.877 4.866 4.893 4.838 4.898
533.6770a 3d3 2D2 52 (3F)4p 2F 72 1.582 −1.600 7 7.20 2 4.991 4.922 4.944 4.870 4.942
538.1013a 3d3 2D2 32 (3F)4p 2F 52 1.566 −1.970 7 5.66 1 5.004 4.963 4.983 4.918 4.988
541.8760a 3d3 2D2 52 (3F)4p 2F 52 1.582 −2.130 7 4.81 3 4.999 4.970 4.990 4.930 4.997"""
            ewlist = []

            wllist = []
            nlte3dlist = []
            ltelist = []
            for line in (scott_data.split("\n")):
                scott_split = line.split(" ")
                print(scott_split)
                # skip lines with "a" in it
                if "a" in scott_split[0] and not ti2:
                    continue
                elif "a" in scott_split[0] and ti2:
                    scott_split[0] = scott_split[0][:-1]
                # turn from nm in AA
                wl = float(scott_split[0]) * 10
                wllist.append(wl)
                if ti2:
                    ew = float(scott_split[-7])
                elif not ti2:
                    ew = float(scott_split[-9])
                # To AA from pico
                ew = ew / 100
                ewlist.append(ew)

                nlte3d = float(scott_split[-1])
                nlte3dlist.append(nlte3d)
                lte = float(scott_split[-4])
                ltelist.append(lte)

            return wllist, ewlist, nlte3dlist, ltelist

        # for the data for chris' project
        def get_chris_data():
                # don'#t forget it takes indentation as text space!
                if not ti2:
                    scott_data = """Ti I    3354.63   0.02   0.11   16.1  -5.32   2.73
Ti I    3371.45   0.05   0.23   18.2  -5.27   2.70
Ti I    3635.46   0.00   0.10   16.8  -5.33   2.71
Ti I    3653.49   0.05   0.28   22.0  -5.22   2.73
Ti I    3741.06   0.02  -0.15   12.1  -5.49   2.72
Ti I    4533.24   0.85   0.54   12.5  -5.56   2.75
Ti I    4534.78   0.84   0.35   11.3  -5.60   2.88
Ti I    5210.38   0.05  -0.82    4.0  -6.12   2.77"""

        # removed Ti II   3348.84   0.12  -1.18   55.4  -4.78   2.79
                # Ti II   3349.03   0.61   0.46   86.1  -4.59   2.64
                # Ti II   3349.40   0.05   0.54  124.0  -4.43   2.81
                # Ti II   3477.18   0.12  -0.95   65.7  -4.72   2.86
                # Ti II   4394.06   1.22  -1.77    9.7  -5.66   2.89
                else:
                    scott_data = """Ti II   3106.23   1.24  -0.07   52.2  -4.78   2.72
Ti II   3161.20   0.11  -0.74   65.9  -4.68   2.77
Ti II   3202.53   1.08   0.07   58.8  -4.74   2.61
Ti II   3222.84   0.01  -0.40   85.5  -4.58   2.98
Ti II   3224.24   1.58   0.05   45.6  -4.85   2.68
Ti II   3228.61   1.08  -0.21   49.3  -4.82   2.56
Ti II   3229.42   1.13  -0.12   49.2  -4.82   2.52
Ti II   3232.28   1.12  -0.22   48.9  -4.82   2.59
Ti II   3236.57   0.03   0.24  105.8  -4.49   2.85
Ti II   3239.04   0.01   0.04   98.2  -4.52   2.87
Ti II   3241.98   0.00  -0.03   96.2  -4.53   2.88
Ti II   3263.68   1.17  -1.14   17.9  -5.26   2.72
Ti II   3276.77   1.18  -0.89   22.9  -5.16   2.63
Ti II   3278.29   1.23  -0.26   45.8  -4.86   2.65
Ti II   3278.92   1.08  -0.22   49.3  -4.82   2.57
Ti II   3282.33   1.22  -0.34   40.6  -4.91   2.58
Ti II   3287.65   1.89   0.45   45.0  -4.86   2.54
Ti II   3288.14   0.14  -1.99   23.0  -5.16   2.73
Ti II   3288.43   1.24  -1.25   14.2  -5.37   2.77
Ti II   3315.32   1.22  -0.64   31.8  -5.02   2.65
Ti II   3321.70   1.23  -0.34   39.6  -4.92   2.56
Ti II   3329.45   0.14  -0.26   84.9  -4.59   2.88
Ti II   3340.34   0.11  -0.53   75.0  -4.65   2.80
Ti II   3341.88   0.57   0.34   84.9  -4.59   2.68
Ti II   3372.79   0.01   0.28  111.9  -4.48   2.84
Ti II   3380.28   0.05  -0.54   80.9  -4.62   2.94
Ti II   3387.83   0.03  -0.41   83.6  -4.61   2.87
Ti II   3388.75   1.24  -1.02   18.5  -5.26   2.67
Ti II   3409.81   0.03  -1.91   31.3  -5.04   2.74
Ti II   3443.37   2.05  -1.21    3.2  -6.03   2.75
Ti II   3456.38   2.06  -0.11   19.4  -5.25   2.56
Ti II   3491.05   0.11  -1.10   62.5  -4.75   2.88
Ti II   3500.33   0.12  -2.04   23.4  -5.17   2.75
Ti II   3504.89   1.89   0.38   42.2  -4.92   2.50
Ti II   3535.41   2.06   0.01   22.8  -5.19   2.54
Ti II   3561.58   0.57  -2.04    9.6  -5.57   2.69
Ti II   3596.05   0.61  -1.07   40.6  -4.95   2.67
Ti II   3659.76   1.58  -0.54   23.6  -5.19   2.55
Ti II   3662.23   1.57  -0.54   22.7  -5.21   2.51
Ti II   3741.64   1.58  -0.07   44.0  -4.93   2.55
Ti II   3757.68   1.57  -0.44   31.2  -5.08   2.61
Ti II   3759.29   0.61   0.28   93.4  -4.61   2.68
Ti II   3761.32   0.57   0.18   93.0  -4.61   2.73
Ti II   3761.87   2.59  -0.42    5.8  -5.81   2.63
Ti II   3776.05   1.58  -1.24    7.7  -5.69   2.64
Ti II   3813.39   0.61  -1.89   17.2  -5.35   2.77
Ti II   3900.54   1.13  -0.29   61.7  -4.80   2.76
Ti II   4012.38   0.57  -1.78   24.4  -5.22   2.81
Ti II   4025.13   0.61  -2.11   10.3  -5.59   2.70
Ti II   4028.34   1.89  -0.92    9.4  -5.63   2.68
Ti II   4163.64   2.59  -0.13   13.2  -5.50   2.71
Ti II   4320.95   1.17  -1.88    6.6  -5.82   2.76
Ti II   4330.70   1.18  -2.09    3.8  -6.06   2.73
Ti II   4395.03   1.08  -0.54   59.1  -4.87   2.82
Ti II   4395.84   1.24  -1.93    5.5  -5.90   2.80
Ti II   4399.77   1.24  -1.20   21.5  -5.31   2.75
Ti II   4418.33   1.24  -1.99    4.7  -5.97   2.77
Ti II   4443.80   1.08  -0.71   50.4  -4.95   2.77
Ti II   4444.55   1.12  -2.20    3.9  -6.06   2.78
Ti II   4468.49   1.13  -0.63   52.8  -4.93   2.78
Ti II   4501.27   1.12  -0.77   46.6  -4.99   2.77
Ti II   4571.97   1.57  -0.31   45.1  -5.01   2.71
Ti II   5129.16   1.89  -1.34    5.0  -6.01   2.73
Ti II   5336.79   1.58  -1.60    6.0  -5.95   2.77"""
                ewlist = []

                wllist = []
                nlte3dlist = []
                ltelist = []
                for line in (scott_data.split("\n")):
                    scott_split = line.split()
                    print(scott_split)

                    wl = float(scott_split[2])
                    wllist.append(wl)
                    if ti2:
                        ew = float(scott_split[-3])
                    elif not ti2:
                        ew = float(scott_split[-3])
                    # To AA from pico
                    ew = ew / 1000
                    ewlist.append(ew)

                    nlte3d = float(scott_split[-1])
                    nlte3dlist.append(nlte3d)
                    lte = float(scott_split[-1])
                    ltelist.append(lte)

                return wllist, ewlist, nlte3dlist, ltelist


        def get_maria_data():
            if not ti2:
                data = """4281.37 17 b a5F1 x5D◦2 0.81 -1.303 2 33 4.78 4.81 4.88 4.91
4512.73 16 a a5F4 y5F◦5 0.84 -0.424 2 67 4.81 4.84 4.92 4.95
4518.03 16 b a5F3 y5F◦4 0.83 -0.269 2 74 4.82 4.85 4.92 4.95
4533.24 16 b a5F5 y5F◦5 0.85 0.532 2 113 4.8 4.82 4.89 4.9
4534.78 16 b a5F4 y5F◦4 0.84 0.336 2 101 4.8 4.82 4.89 4.9
4548.77 16 s a5F3 y5F◦2 0.83 -0.298 2 73 4.82 4.85 4.92 4.95
4555.49 16 a a5F5 y5F◦4 0.85 -0.432 2 67 4.82 4.85 4.92 4.95
4562.63 5 b a3F3 z1D◦2 0.02 -2.600 1 13 4.83 4.87 4.92 4.96
4617.28 57 a a5P3 w5D◦4 1.75 0.445 4 63 4.75 4.76 4.86 4.87
4639.93 57 b a5P1 w5D◦1 1.73 -0.136 4 38 4.76 4.79 4.88 4.9
4681.92 4 b a3F4 z3G◦5 0.05 -1.03 -1.01 1 75 4.8 4.84 4.9 4.94
4758.12 74 b a3H5 x3H◦5 2.25 0.481 4 46 4.77 4.79 4.86 4.89
4759.27 74 b a3H6 x3H◦6 2.26 0.570 4 49 4.76 4.78 4.85 4.87
4820.41 55 b a1G4 y1F◦3 1.50 -0.385 4 44 4.8 4.84 4.88 4.9
4840.88 23 b a1D2 y1D◦2 0.90 -0.453 2 64 4.82 4.81 4.92 4.93
4964.7 66 b z5G◦2 e5F2 1.97 -0.819 4 9 4.77 4.8 4.87 4.89
4981.74 13 s a5F5 y5G◦6 0.85 0.560 2 120 4.78 4.8 4.89 4.91
4991.07 13 b, s a5F4 y5G◦5 0.84 0.436 2 112 4.78 4.8 4.89 4.91
4997.1 3 a a3F2 z3D◦2 0.00 -2.07 -2.06 1 34 4.8 4.84 4.9 4.95
4999.51 13 b a5F3 y5G◦4 0.83 0.306 2 106 4.82 4.85 4.93 4.95
5009.66 3 b, uc a3F3 z3D◦3 0.02 -2.23 -2.20 1 27 4.84 4.88 4.94 4.98
5016.17 13 uc a5F5 y5G◦5 0.85 -0.518 2 65 4.83 4.86 4.91 4.95
5022.87 13 b a5F3 y5G◦3 0.83 -0.38 2 74 4.83 4.87 4.92 4.96
5039.96 3 b, s a3F3 z3D◦2 0.02 -1.09 -1.07 3 77 4.83 4.86 4.91 4.94
5064.65 3 b a3F4 z3D◦3 0.05 -0.95 -0.94 1 84 4.88 4.91 4.99 5.01
5113.45 48 b b3F3 v3D◦2 1.44 -0.727 4 27 4.77 4.79 4.86 4.88
5147.48 2 b, uc a3F2 z3F◦3 0.00 -1.89 -1.95 1 38 4.73 4.78 4.83 4.88
5152.19 2 b a3F3 z3F◦4 0.02 -1.90 -1.96 1 38 4.74 4.78 4.83 4.88
5173.75 2 b a3F2 z3F◦2 0.00 -1.07 -1.06 1 79 4.78 4.82 4.88 4.91
5192.98 2 b a3F3 z3F◦3 0.02 -0.96 -0.95 1 85 4.78 4.82 4.88 4.91
5210.39 2 b a3F4 z3F◦4 0.05 -0.85 -0.82 1 88 4.84 4.88 4.94 4.97
5219.7 2 b a3F3 z3F◦2 0.02 -2.26 -2.23 1 28 4.88 4.92 4.97 5.01
5295.78 31 b a3P2 x3D◦3 1.07 -1.577 3 13 4.82 4.86 4.92 4.95
5490.15 45 b b3F4 x5D◦3 1.46 -0.877 4 24 4.8 4.82 4.89 4.91
5662.15 78 b z5D◦4 e5F5 2.32 -0.053 4 24 4.81 4.83 4.9 4.93
5866.46 30 b a3P2 y3D◦3 1.07 -0.784 2 48 4.81 4.82 4.9 4.91
5922.12 27 b, uc a3P0 y3D◦1 1.05 -1.410 2 21 4.84 4.87 4.93 4.96
5965.83 62 b, uc a3G4 z3H◦5 1.88 -0.353 4 28 4.8 4.82 4.89 4.91
5978.54 62 a a3G3 z3H◦4 1.87 -0.440 4 25 4.79 4.81 4.87 4.89
6064.63 25 b, uc a3P0 z3S◦1 1.05 -1.888 3 9 4.85 4.88 4.96 5.00
6092.8 61 uc a3G5 w3G◦5 1.89 -1.323 4 5 4.82 4.86 4.92 4.96
6126.22 25 a a3P2 z3S◦1 1.07 -1.369 3 23 4.85 4.87 4.95 4.97
6258.71 43 a b3F4 y3G◦5 1.46 -0.299 4 53 4.79 4.79 4.88 4.89
6261.1 43 b, uc b3F2 y3G◦3 1.43 -0.423 4 49 4.83 4.84 4.92 4.93
6303.76 43 b, rc b3F3 y3G◦3 1.44 -1.510 4 9 4.83 4.86 4.93 4.97
6312.24 43 b, rc b3F4 y3G◦4 1.46 -1.496 4 9 4.81 4.84 4.9 4.94
6554.24 41 b b3F3 x3F◦3 1.44 -1.162 4 11 4.83 4.86 4.91 4.94
6556.08 41 a b3F4 x3F◦4 1.46 -1.018 4 11 4.81 4.83 4.89 4.91
7357.74 35 b, rc b3F3 y3F◦3 1.44 -1.066 4 23 4.85 4.87 4.94 4.96
8426.51 7 b a5F3 z5D◦2 0.83 -1.197 2 51 4.89 4.92 4.96 5
8435.66 7 b a5F4 z5D◦3 0.84 -0.967 2 62 4.88 4.91 4.96 4.98
8682.99 24 uc a3P1 z3D◦2 1.05 -1.69 -1.82 3 15 4.74 4.77 4.83 4.86"""
            else:
                data = """4394.05 12 b a2P0.5 z4D◦1.5 1.22 77 -1.78 0.04 1 5
4395.85 3 b b4P2.5 z4D◦3.5 1.24 71 -1.93 0.04 1 5
4443.8 3 b a2D1.5 z2F◦2.5 1.08 138 -0.72 0.02 1 5
4444.56 6 b a2G3.5 z2F◦3.5 1.12 61 -2.24 1 4.97 4.97 4.99 4.99
4468.5 6 b a2G4.5 z2F◦3.5 1.13 139 -0.6 0.02 2 4.94 4.92 4.98 4.96
4488.32 26 b, uc c2D2.5 x2F◦3.5 3.12 50 -0.51 0.03 1 4.86 4.84 4.91 4.90
4493.52 2 b a2D1.5 z4F◦2.5 1.08 33 -2.83 0.05 1 4.89 4.89 4.90 4.90
4563.77 11 b a2P0.5 z2D◦1.5 1.22 129 -0.69 0.02 1 4.98 4.98 5.01 5.01
4583.41 8 b a4P1.5 z2F◦2.5 1.17 31 -2.92 1 5.03 5.03 5.04 5.03
4636.32 7 b a4P1.5 z4F◦2.5 1.16 20 -3.02 1 4.81 4.8 4.85 4.84
4657.2 13 b b4P2.5 z2F◦3.5 1.24 52 -2.32 0.03 2 4.98 4.97 4.99 4.98
4708.66 10 uc a2P1.5 z2F◦2.5 1.24 51 -2.34 0.05 1 4.96 4.95 4.97 4.96
4798.53 1 a a2D1.5 z4G◦2.5 1.08 44 -2.68 0.08 1 4.97 4.97 5.00 5.00
5129.15 20 b b2G4.5 z2G◦4.5 1.89 72 -1.24 0.03 1 4.96 4.93 4.99 4.96
5336.81 16 b b2D2.5 z2F◦3.5 1.58 71 -1.63 0.03 2 5.05 5.02 5.03 5.00
5381.01 16 b b2D1.5 z2F◦2.5 1.57 57 -1.92 0.05 1 4.95 4.94 4.95 4.94
5418.77 16 b b2D2.5 z2F◦2.5 1.58 51 -2 0.05 1 4.90 4.89 4.90 4.89"""

            wllist = []
            nlte3dlist = []
            ltelist = []
            for line in (data.split("\n")):
                split = line.split(" ")
                # skip lines with "a" in it
                # turn from nm in AA
                wl = float(split[0])
                wllist.append(wl)

                nlte3d = float(split[-1])
                nlte3dlist.append(nlte3d)
                lte = float(split[-4])
                ltelist.append(lte)

            return wllist, nlte3dlist, ltelist


        # Same as getting scott data, but from different papers for diff stars.
        def get_144():
            # deleted for being blended
            # 3314.4         5.888     0.195
            # 3717.4         1.938     0.118
            # 3981.8        25.044     0.268
            data144ti1 = """2644.3         0.000     0.000
2646.6        21.293     0.479
2956.1         0.000     0.000
3186.5         0.000     0.000
3192.0        25.781     0.429
3199.9        28.752     0.341
3354.6        22.144     0.310
3370.4         9.251     0.198
3371.5        25.988     0.317
3377.6         0.000     0.000
3385.9        11.835     0.210
3598.7         3.204     0.141
3635.5        24.615     0.323
3642.7         0.000     0.000
3725.2         0.000     0.000
3729.8        14.543     0.190
3741.1        18.645     0.246
3752.9         0.000     0.000
3904.8         6.980     0.147
3924.5         4.706     0.152
3929.9         0.000     0.000
3947.8         5.038     0.150
3956.3         0.000     0.000
3958.2        22.101     0.221
3989.8        22.249     0.317
3998.6        25.204     0.273
4008.9         4.274     0.133
4024.6         3.899     0.172
4287.4         1.681     0.107
4298.7         0.000     0.000
4305.9         0.000     0.000
4427.1         0.000     0.000
4449.1         2.543     0.107
4518.0         2.945     0.116
4533.2        16.912     0.177
4534.8        11.320     0.158
4535.6         7.941     0.142
4548.8         3.542     0.119
4555.5         2.533     0.108
4617.3         2.450     0.101
4691.3         0.000     0.000
4981.7        18.916     0.195
4991.1        15.790     0.229
4999.5        12.664     0.166
5014.3         0.000     0.000
5022.9         3.346     0.096
5036.5         0.000     0.000
5173.7         3.636     0.102
5193.0         5.308     0.105"""
            # Deleted due blended
            # 3276.8         0.000     0.000
            # 3277.0        16.969     0.235
            # 3288.1         0.000     0.000
            # 3288.4        18.911     0.466
            # 3348.8        69.050     2.390
            #3477.2        77.982     0.840
            # 3982.0         8.381     0.143
            # 4315.0         0.000     0.000
            # 4394.1        11.500     0.148
            # 4421.9         1.688     0.103
            # 4549.6         0.000     0.000
            # 4552.3         0.000     0.000
            # 3288.6        27.089     0.771
            # 3321.75        49.207     0.546
            data144ti2 = """2474.2        16.588     0.479
2517.4         0.000     0.000
2571.0        49.930     1.408
2581.7         0.000     0.000
2717.3         0.000     0.000
2725.8        16.545     0.478
2761.3        17.913     0.362
2784.6        11.018     0.339
2806.5         0.000     0.000
2820.4         0.000     0.000
2832.2        73.872     0.669
2841.9        57.579     0.633
2853.9         0.000     0.000
2862.3        39.353     0.691
2884.1        53.627     0.743
2888.9        35.823     1.749
3017.2         0.000     0.000
3029.7        35.125     0.496
3046.7        33.755     0.442
3056.7        39.140     0.490
3058.1        46.472     0.431
3071.2         0.000     0.000
3089.4        36.812     0.592
3103.8        39.238     0.476
3105.1        45.552     0.652
3106.2        56.597     0.684
3110.1         9.683     0.737
3117.7         0.000     0.000
3119.8         0.000     0.000
3122.1         0.000     0.000
3144.7         0.000     0.000
3154.2        74.321     0.566
3184.1        20.083     0.383
3195.7        17.194     0.538
3197.5        43.688     1.099
3203.4        52.338     1.250
3213.1        29.684     0.979
3214.8         0.000     0.000
3224.2        49.048     0.612
3226.8        53.110     1.526
3236.1         0.000     0.000
3249.4         0.000     0.000
3263.7        23.765     0.297
3271.6         0.000     0.000
3272.1        52.508     1.251
3275.3        16.374     0.279
3278.3        50.905     0.561
3280.0        22.024     0.275
3282.3        47.776     0.533
3287.7         0.000     0.000
3301.7         0.000     0.000
3302.1        19.755     0.248
3307.7        14.970     0.215
3308.8        66.696     0.739
3309.5        12.151     0.208
3315.3        39.956     0.449
3318.0        72.373     0.513
3319.1         7.919     0.193
3337.8        17.151     0.226
3343.8        68.002     0.475
3352.1        21.122     0.274
3369.2        13.929     0.219
3374.3        24.712     3.943
3379.9         0.000     0.000
3388.8         0.000     0.000
3407.2        44.831     0.623
3409.8        45.101     0.538
3417.0         9.988     0.204
3422.7         0.000     0.000
3452.5        11.867     0.266
3456.4        24.325     0.288
3461.5        80.096     5.435
3489.7        46.395     0.573
3491.0        71.993     0.686
3500.3        35.313     0.400
3504.9        49.854     0.624
3520.3        21.796     0.483
3533.9         3.172     0.148
3535.4        27.127     0.313
3561.6        15.988     0.270
3573.7        35.594     2.193
3596.0        52.056     0.556
3706.2         0.000     0.000
3741.6        53.184     0.610
3748.0         0.000     0.000
3757.7        37.523     0.387
3759.3       111.636     0.687
3761.3       108.670     0.656
3761.9         8.304     0.153
3774.6         0.000     0.000
3776.1         0.000     0.000
3786.3         8.394     0.529
3813.4        25.384     0.279
3882.3         0.000     0.000
3900.5        69.866     0.725
3913.5        65.483     1.049
3987.6         5.223     0.142
4012.4        34.284     0.336
4025.1        18.395     0.199
4028.3        12.998     0.195
4053.8         9.145     0.147
4161.5         7.348     0.147
4163.6        14.121     0.184
4171.9        10.990     0.155
4290.2        46.801     0.436
4300.0        67.900     0.754
4301.9        38.424     0.525
4312.9         0.000     0.000
4316.8         2.012     0.104
4321.0        11.160     0.171
4330.2         0.000     0.000
4330.7         6.467     0.124
4367.7         0.000     0.000
4391.0         0.000     0.000
4395.8         0.000     0.000
4409.5         0.000     0.000
4418.3         7.433     0.138
4443.8        61.977     0.401
4444.6         5.172     0.115
4450.5        24.059     0.262
4468.5        64.215     0.414
4488.3         1.828     0.100
4493.5         1.295     0.096
4501.3        58.311     0.390
4518.3         3.297     0.114
4545.1         3.575     0.107
4572.0        53.657     0.361
4583.4         1.635     0.099
4609.3         0.000     0.000
4657.2         3.385     0.103
4708.7         3.855     0.113
4719.5         0.000     0.000
4762.8         0.000     0.000
4763.9         3.939     0.104
4764.5         1.504     0.102
4798.5         2.616     0.167
4865.6         0.000     0.000
4874.0         0.000     0.000
4911.2         0.000     0.000
5005.2         0.000     0.000
5013.7         2.117     0.103
5069.1         0.000     0.000
5072.3         0.000     0.000
5129.2         6.935     0.136
5185.9         4.998     0.104
5211.5         1.178     0.085
5336.8         7.759     0.118
5381.0         3.967     0.104
5396.2         0.000     0.000
5418.8         3.381     0.105
6680.1         0.000     0.000
9432.2         0.000     0.000"""#
            wllist = []
            equivwidthlist = []
            abund_list = []
            if ti2:
                data144 = data144ti2
            else:
                data144 = data144ti1

            for line in (data144.split("\n")):

                split = line.split()
                if float(split[1]) > 0:
                    wl = float(split[0])
                else:
                    continue
                wllist.append(wl)
                # Go from mAA to AA
                equivwidth = float(split[1]) / 1000
                equivwidthlist.append((equivwidth))

                lte = 0
                abund_list.append(lte)

            return wllist, equivwidthlist, abund_list


        def get_122():
            data144ti1ew = """3598.7         9.777     0.220
        3635.5         0.000     0.000
        3642.7         0.000     0.000
        3717.4        15.970     0.251
        3725.2         4.023     0.142
        3729.8        62.128     0.445
        3741.1        60.851     0.428
        3752.9        74.038     0.929
        3904.8        26.459     0.363
        3924.5        29.245     0.373
        3929.9         0.000     0.000
        3947.8        31.212     0.770
        3956.3         0.000     0.000
        3958.2        73.019     2.408
        3981.8         0.000     0.000
        3989.8         0.000     0.000
        3998.6        75.584     1.503
        4008.9        26.877     0.330
        4024.6         0.000     0.000
        4287.4        19.025     0.231
        4298.7         0.000     0.000
        4305.9         0.000     0.000
        4427.1         0.000     0.000
        4449.1         5.708     0.152
        4518.0        18.905     0.202
        4534.8        43.721     0.333
        4535.6        36.210     0.479
        4548.8        17.749     0.190
        4555.5        13.090     0.158
        4617.3         8.111     0.138
        4691.3         0.000     0.000
        4981.7        62.468     0.396
        5014.3         0.000     0.000
        5022.9        17.917     0.195
        5036.5        12.377     0.162
        5173.7        32.679     0.316
        5193.0        37.243     0.333"""
            data144ti2ew = """3500.3        99.922     2.727
        3504.9         0.000     0.000
        3520.3         0.000     0.000
        3533.9        15.915     0.250
        3535.4        66.974     1.476
        3561.6         0.000     0.000
        3573.7         0.000     0.000
        3596.0         0.000     0.000
        3706.2         0.000     0.000
        3741.6         0.000     0.000
        3748.0         0.000     0.000
        3757.7        83.136     2.103
        3759.3       209.168     1.279
        3761.3       194.250     4.133
        3761.9        34.370     0.552
        3774.6        55.363     3.764
        3776.1        51.734     0.689
        3786.3         0.000     0.000
        3813.4       100.697     5.068
        3882.3         0.000     0.000
        3900.5       133.115     0.853
        3913.5         0.000     0.000
        3982.0         0.000     0.000
        3987.6        48.878     0.636
        4012.4       103.308     2.660
        4025.1        90.895     0.846
        4028.3        54.402     0.386
        4053.8        41.757     0.460
        4161.5        51.710     0.594
        4163.6        45.062     0.480
        4171.9         0.000     0.000
        4290.2         0.000     0.000
        4300.0         0.000     0.000
        4301.9         0.000     0.000
        4312.9         0.000     0.000
        4315.0         0.000     0.000
        4316.8        18.131     0.207
        4321.0         0.000     0.000
        4330.2         0.000     0.000
        4330.7        49.565     0.624
        4367.7         0.000     0.000
        4391.0        46.454     0.470
        4395.8        51.120     0.621
        4409.5        21.144     0.293
        4418.3        51.096     0.348
        4444.6        47.123     0.503
        4488.3        10.120     0.159
        4493.5        18.654     0.202
        4518.3        32.997     0.353
        4545.1        33.627     0.282
        4549.6         0.000     0.000
        4552.3         0.000     0.000
        4583.4        16.976     0.221
        4609.3         5.332     0.116
        4657.2        34.988     0.629
        4708.7        36.021     0.280
        4719.5         6.008     0.130
        4762.8         0.000     0.000
        4763.9        35.184     0.346
        4764.5        18.544     0.198
        4798.5        28.559     0.650
        4865.6        24.999     0.249
        4874.0         4.867     0.123
        4911.2         8.161     0.129
        5005.2         0.000     0.000
        5013.7        22.092     0.212
        5069.1         0.000     0.000
        5072.3         0.000     0.000
        5129.2        40.354     0.823
        5185.9        35.635     0.319
        5211.5         5.966     0.111
        5336.8        53.625     0.370
        5381.0        34.910     0.280
        5396.2         5.427     0.112
        5418.8        26.487     0.208
        6680.1         0.000     0.000
        9432.2         0.000     0.000"""

            """   1- 11 F11.2  0.1nm    lambda             Wavelength in Angstroms, in air units
          12- 18 A7     ---      Ion                Species identification
          19- 27 F9.3   eV       chi                lower excitation level
          28- 35 F8.2   [-]      log(gf)            Log of the oscillator strength
          36- 43 F8.1   10-4nm   EW-122563          Equivalent width, HD 122563, milli-Angstroms
          44- 51 F8.1   10-4nm   EW-140283          ? equivalent width, HD 140283, milli-Angstroms
          52- 59 F8.2   ---      [X/Fe]122563       relative abundance, HD 122563(1)
          60- 67 F8.2   ---      [X/Fe]140283       ? relative abundance, HD 140283(1)"""
            dataabundti1 = """4449.14   Ti I    1.890    0.47     6.4   0.14
            4450.89   Ti I    1.880    0.32     3.6       1     0.02        
            4453.31   Ti I    1.430   -0.03     9.3       1     0.26        
            4455.32   Ti I    1.440    0.13     8.7      1      0.08        
            4457.43   Ti I    1.460    0.26    15.5       1     0.25        
            4512.73   Ti I    0.830   -0.40    14.0     2.0    0.09
            4518.02   Ti I    0.820   -0.25    19.0     3.3    0.08
            4527.30   Ti I    0.810   -0.45    14.4     2.7    0.12
            4533.24   Ti I    0.850    0.54    51.9    15.5   -0.05 
            4534.78   Ti I    0.830    0.35    42.5    11.1   -0.03 
            4535.57   Ti I    0.820    0.14    34.2     7.6    0.02
            4544.69   Ti I    0.820   -0.45    13.8     2.0    0.10
            4548.76   Ti I    0.820   -0.28    16.5      1      0.03        
            4555.48   Ti I    0.850   -0.39    11.7     1       0.00        
            4759.27   Ti I    2.250    0.59     3.8      1      0.22        
            4870.12   Ti I    2.250    0.44     2.0      1      0.06        
            4885.08   Ti I    1.890    0.41     5.0      1      0.07        
            4913.61   Ti I    1.870    0.22     4.7      1      0.21        
            4991.07   Ti I    0.830    0.45    63.0    15.0    0.14
            4999.50   Ti I    0.820    0.32    50.0      1      0.06        
            5007.21   Ti I    0.820    0.17    51.5    13.5    0.23
            5009.65   Ti I    0.020   -2.20     4.1      1      0.26        
            5016.16   Ti I    0.850   -0.48    12.9      1      0.11        
            5024.84   Ti I    0.820   -0.53    13.5      1      0.14        
            5036.46   Ti I    1.440    0.14     8.6      1      0.03        
            5038.40   Ti I    1.430    0.02     8.4      1      0.13        
            5039.96   Ti I    0.020   -1.08    32.9      1      0.16        
            5064.65   Ti I    0.050   -0.94    35.0     4.7    0.09
            5145.46   Ti I    1.460   -0.54     2.5       1     0.17        
            5147.48   Ti I    0.000   -1.94     6.4      1      0.16        
            5173.74   Ti I    0.000   -1.06    31.6     3.7    0.08
            5192.97   Ti I    0.020   -0.95    36.3     4.5    0.08
            5210.38   Ti I    0.050   -0.82    41.4     6.7    0.06
            5219.70   Ti I    0.020   -2.22     4.0      1      0.25        
            5866.45   Ti I    1.070   -0.73     5.5     1       0.17        
            6258.10   Ti I    1.440   -0.39     4.1      1      0.15        
            6258.71   Ti I    1.460   -0.28     6.9      1      0.29        
            6261.10   Ti I    1.430   -0.53     3.2      1      0.16"""

            dataabundti2 = """4395.84  Ti II    1.240   -1.93    48.6     5.9    0.23  
            4399.77  Ti II    1.240   -1.20    90.0    29.5    0.22
            4409.52  Ti II    1.230   -2.53    21.8     1.8    0.31
            4411.07  Ti II    3.090   -0.65     9.0      1      0.26        
            4411.93  Ti II    1.220   -2.62    19.8     1.6    0.34
            4418.33  Ti II    1.240   -1.99    50.9     6.2    0.32
            4421.94  Ti II    2.060   -1.64    14.3      1      0.22        
            4432.10  Ti II    1.240   -3.08     7.3      1      0.32        
            4443.80  Ti II    1.080   -0.71   127.7    61.9    0.33
            4444.55  Ti II    1.110   -2.20    47.5     5.4    0.32
            4450.48  Ti II    1.080   -1.52    84.1    24.0    0.21
            4468.49  Ti II    1.130   -0.63   128.0    62.2    0.31
            4469.15  Ti II    1.080   -2.55    33.0      1      0.38        
            4488.32  Ti II    3.120   -0.50     8.9      1      0.13        
            4493.52  Ti II    1.080   -2.78    19.0      1      0.29        
            4501.27  Ti II    1.110   -0.77   123.8    57.0    0.31 
            4518.33  Ti II    1.080   -2.56    33.8     3.6    0.39
            4529.48  Ti II    1.570   -1.75    42.6     6.3    0.35
            4545.13  Ti II    1.130   -2.45    31.1     2.2    0.29
            4571.97  Ti II    1.570   -0.31   115.8    52.4    0.25
            4583.41  Ti II    1.160   -2.84    16.2      1      0.37        
            4609.27  Ti II    1.180   -3.32     5.0      1      0.31        
            4708.66  Ti II    1.240   -2.35    33.3     3.5    0.35
            4719.51  Ti II    1.240   -3.32     5.0       1     0.38        
            4764.52  Ti II    1.240   -2.69    18.1       1     0.35        
            4849.17  Ti II    1.130   -2.96    14.0       1     0.35        
            4865.61  Ti II    1.110   -2.70    25.2       1     0.38        
            4874.01  Ti II    3.090   -0.86     4.1       1     0.09        
            4911.19  Ti II    3.120   -0.64     8.3       1     0.22        
            5005.17  Ti II    1.560   -2.73     7.3       1     0.34        
            5013.69  Ti II    1.580   -2.14    21.0       1     0.29        
            5185.90  Ti II    1.890   -1.41    35.8     5.0    0.24
            5211.53  Ti II    2.590   -1.41     5.7       1     0.16        
            5268.61  Ti II    2.600   -1.61     4.4       1     0.25        
            5336.79  Ti II    1.580   -1.60    52.1       1     0.29        
            5381.02  Ti II    1.560   -1.97    34.6     3.6    0.36
            5396.25  Ti II    1.580   -3.18     2.9     3.1    0.38
            5418.77  Ti II    1.580   -2.13    26.3      1      0.37"""

            ewdict = {}

            energylist = []
            gflist = []
            wllist = []
            equivwidthlist = []
            abund_list = []

            if ti2:
                # abund data from the literature
                data144 = dataabundti2
                # ew data
                tiews = data144ti2ew

            else:
                data144 = dataabundti1
                tiews = data144ti1ew
            # Making the dictionary of equiv widths with karin's ews to use its wavelengths to compare to the ones in lit.
            for line in (tiews.split("\n")):
                ewdict[float(line.split()[0])] = float(line.split()[1])
            print(ewdict)

            #  36- 43 F8.1   10-4nm   EW-122563          Equivalent width, HD 122563, milli-Angstroms
            for line in (data144.split("\n")):
                split = line.split()
                wl = float(split[0])
                # Only use the ones in both Karin's and lit
                gf = float(split[4])
                try:
                    equivwidth = ewdict[round(wl, 1)]
                except KeyError:
                    continue

                if equivwidth == 0.0:
                    continue
                print(equivwidth)
                gflist.append(gf)
                energylist.append(float(split[3]))

                wllist.append(wl)
                # Go from mAA to AA

                equivwidthlist.append((equivwidth / 1000))
                # Lte abundance
                lte = float(split[-1])
                abund_list.append(lte)

            return wllist, equivwidthlist, abund_list, gflist, energylist

        def get_122_kaulkyselectrons():
            data144ti1ew = """3598.7         9.777     0.220
        3635.5         0.000     0.000
        3642.7         0.000     0.000
        3717.4        15.970     0.251
        3725.2         4.023     0.142
        3729.8        62.128     0.445
        3741.1        60.851     0.428
        3752.9        74.038     0.929
        3904.8        26.459     0.363
        3924.5        29.245     0.373
        3929.9         0.000     0.000
        3947.8        31.212     0.770
        3956.3         0.000     0.000
        3958.2        73.019     2.408
        3981.8         0.000     0.000
        3989.8         0.000     0.000
        3998.6        75.584     1.503
        4008.9        26.877     0.330
        4024.6         0.000     0.000
        4287.4        19.025     0.231
        4298.7         0.000     0.000
        4305.9         0.000     0.000
        4427.1         0.000     0.000
        4449.1         5.708     0.152
        4518.0        18.905     0.202
        4548.8        17.749     0.190
        4555.5        13.090     0.158
        4617.3         8.111     0.138
        4691.3         0.000     0.000
        4981.7        62.468     0.396
        5014.3         0.000     0.000
        5022.9        17.917     0.195
        5036.5        12.377     0.162"""
            data144ti2ew = """3500.3        99.922     2.727
        3504.9         0.000     0.000
        3520.3         0.000     0.000
        3533.9        15.915     0.250
        3535.4        66.974     1.476
        3561.6         0.000     0.000
        3573.7         0.000     0.000
        3596.0         0.000     0.000
        3706.2         0.000     0.000
        3741.6         0.000     0.000
        3748.0         0.000     0.000
        3757.7        83.136     2.103
        3759.3       209.168     1.279
        3761.3       194.250     4.133
        3761.9        34.370     0.552
        3774.6        55.363     3.764
        3776.1        51.734     0.689
        3786.3         0.000     0.000
        3813.4       100.697     5.068
        3882.3         0.000     0.000
        3900.5       133.115     0.853
        3913.5         0.000     0.000
        3982.0         0.000     0.000
        3987.6        48.878     0.636
        4012.4       103.308     2.660
        4025.1        90.895     0.846
        4028.3        54.402     0.386
        4053.8        41.757     0.460
        4161.5        51.710     0.594
        4163.6        45.062     0.480
        4171.9         0.000     0.000
        4290.2         0.000     0.000
        4300.0         0.000     0.000
        4301.9         0.000     0.000
        4312.9         0.000     0.000
        4315.0         0.000     0.000
        4316.8        18.131     0.207
        4321.0         0.000     0.000
        4330.2         0.000     0.000
        4330.7        49.565     0.624
        4367.7         0.000     0.000
        4391.0        46.454     0.470
        4395.8        51.120     0.621
        4409.5        21.144     0.293
        4418.3        51.096     0.348
        4444.6        47.123     0.503
        4488.3        10.120     0.159
        4493.5        18.654     0.202
        4518.3        32.997     0.353
        4545.1        33.627     0.282
        4549.6         0.000     0.000
        4552.3         0.000     0.000
        4583.4        16.976     0.221
        4609.3         5.332     0.116
        4657.2        34.988     0.629
        4708.7        36.021     0.280
        4719.5         6.008     0.130
        4762.8         0.000     0.000
        4763.9        35.184     0.346
        4764.5        18.544     0.198
        4798.5        28.559     0.650
        4865.6        24.999     0.249
        4874.0         4.867     0.123
        4911.2         8.161     0.129
        5005.2         0.000     0.000
        5013.7        22.092     0.212
        5069.1         0.000     0.000
        5072.3         0.000     0.000
        5129.2        40.354     0.823
        5185.9        35.635     0.319
        5211.5         5.966     0.111
        5336.8        53.625     0.370
        5381.0        34.910     0.280
        5396.2         5.427     0.112
        5418.8        26.487     0.208
        6680.1         0.000     0.000
        9432.2         0.000     0.000"""

            """   1- 11 F11.2  0.1nm    lambda             Wavelength in Angstroms, in air units
          12- 18 A7     ---      Ion                Species identification
          19- 27 F9.3   eV       chi                lower excitation level
          28- 35 F8.2   [-]      log(gf)            Log of the oscillator strength
          36- 43 F8.1   10-4nm   EW-122563          Equivalent width, HD 122563, milli-Angstroms
          44- 51 F8.1   10-4nm   EW-140283          ? equivalent width, HD 140283, milli-Angstroms
          52- 59 F8.2   ---      [X/Fe]122563       relative abundance, HD 122563(1)
          60- 67 F8.2   ---      [X/Fe]140283       ? relative abundance, HD 140283(1)"""
            dataabundti1 = """4449.14   Ti I    1.890    0.47     6.4   0.14
            4450.89   Ti I    1.880    0.32     3.6       1     0.02        
            4453.31   Ti I    1.430   -0.03     9.3       1     0.26        
            4455.32   Ti I    1.440    0.13     8.7      1      0.08        
            4457.43   Ti I    1.460    0.26    15.5       1     0.25        
            4512.73   Ti I    0.830   -0.40    14.0     2.0    0.09
            4518.02   Ti I    0.820   -0.25    19.0     3.3    0.08
            4527.30   Ti I    0.810   -0.45    14.4     2.7    0.12
            4533.24   Ti I    0.850    0.54    51.9    15.5   -0.05 
            4534.78   Ti I    0.830    0.35    42.5    11.1   -0.03 
            4535.57   Ti I    0.820    0.14    34.2     7.6    0.02
            4544.69   Ti I    0.820   -0.45    13.8     2.0    0.10
            4548.76   Ti I    0.820   -0.28    16.5      1      0.03        
            4555.48   Ti I    0.850   -0.39    11.7     1       0.00        
            4759.27   Ti I    2.250    0.59     3.8      1      0.22        
            4870.12   Ti I    2.250    0.44     2.0      1      0.06        
            4885.08   Ti I    1.890    0.41     5.0      1      0.07        
            4913.61   Ti I    1.870    0.22     4.7      1      0.21        
            4991.07   Ti I    0.830    0.45    63.0    15.0    0.14
            4999.50   Ti I    0.820    0.32    50.0      1      0.06        
            5007.21   Ti I    0.820    0.17    51.5    13.5    0.23
            5009.65   Ti I    0.020   -2.20     4.1      1      0.26        
            5016.16   Ti I    0.850   -0.48    12.9      1      0.11        
            5024.84   Ti I    0.820   -0.53    13.5      1      0.14        
            5036.46   Ti I    1.440    0.14     8.6      1      0.03        
            5038.40   Ti I    1.430    0.02     8.4      1      0.13        
            5039.96   Ti I    0.020   -1.08    32.9      1      0.16        
            5064.65   Ti I    0.050   -0.94    35.0     4.7    0.09
            5145.46   Ti I    1.460   -0.54     2.5       1     0.17        
            5147.48   Ti I    0.000   -1.94     6.4      1      0.16        
            5173.74   Ti I    0.000   -1.06    31.6     3.7    0.08
            5192.97   Ti I    0.020   -0.95    36.3     4.5    0.08
            5210.38   Ti I    0.050   -0.82    41.4     6.7    0.06
            5219.70   Ti I    0.020   -2.22     4.0      1      0.25        
            5866.45   Ti I    1.070   -0.73     5.5     1       0.17        
            6258.10   Ti I    1.440   -0.39     4.1      1      0.15        
            6258.71   Ti I    1.460   -0.28     6.9      1      0.29        
            6261.10   Ti I    1.430   -0.53     3.2      1      0.16"""

            dataabundti2 = """4395.84  Ti II    1.240   -1.93    48.6     5.9    0.23  
            4399.77  Ti II    1.240   -1.20    90.0    29.5    0.22
            4409.52  Ti II    1.230   -2.53    21.8     1.8    0.31
            4411.07  Ti II    3.090   -0.65     9.0      1      0.26        
            4411.93  Ti II    1.220   -2.62    19.8     1.6    0.34
            4418.33  Ti II    1.240   -1.99    50.9     6.2    0.32
            4421.94  Ti II    2.060   -1.64    14.3      1      0.22        
            4432.10  Ti II    1.240   -3.08     7.3      1      0.32        
            4443.80  Ti II    1.080   -0.71   127.7    61.9    0.33
            4444.55  Ti II    1.110   -2.20    47.5     5.4    0.32
            4450.48  Ti II    1.080   -1.52    84.1    24.0    0.21
            4468.49  Ti II    1.130   -0.63   128.0    62.2    0.31
            4469.15  Ti II    1.080   -2.55    33.0      1      0.38        
            4488.32  Ti II    3.120   -0.50     8.9      1      0.13        
            4493.52  Ti II    1.080   -2.78    19.0      1      0.29        
            4501.27  Ti II    1.110   -0.77   123.8    57.0    0.31 
            4518.33  Ti II    1.080   -2.56    33.8     3.6    0.39
            4529.48  Ti II    1.570   -1.75    42.6     6.3    0.35
            4545.13  Ti II    1.130   -2.45    31.1     2.2    0.29
            4571.97  Ti II    1.570   -0.31   115.8    52.4    0.25
            4583.41  Ti II    1.160   -2.84    16.2      1      0.37        
            4609.27  Ti II    1.180   -3.32     5.0      1      0.31        
            4708.66  Ti II    1.240   -2.35    33.3     3.5    0.35
            4719.51  Ti II    1.240   -3.32     5.0       1     0.38        
            4764.52  Ti II    1.240   -2.69    18.1       1     0.35        
            4849.17  Ti II    1.130   -2.96    14.0       1     0.35        
            4865.61  Ti II    1.110   -2.70    25.2       1     0.38        
            4874.01  Ti II    3.090   -0.86     4.1       1     0.09        
            4911.19  Ti II    3.120   -0.64     8.3       1     0.22        
            5005.17  Ti II    1.560   -2.73     7.3       1     0.34        
            5013.69  Ti II    1.580   -2.14    21.0       1     0.29        
            5185.90  Ti II    1.890   -1.41    35.8     5.0    0.24
            5211.53  Ti II    2.590   -1.41     5.7       1     0.16        
            5268.61  Ti II    2.600   -1.61     4.4       1     0.25        
            5336.79  Ti II    1.580   -1.60    52.1       1     0.29        
            5381.02  Ti II    1.560   -1.97    34.6     3.6    0.36
            5396.25  Ti II    1.580   -3.18     2.9     3.1    0.38
            5418.77  Ti II    1.580   -2.13    26.3      1      0.37"""

            ewdict = {}

            energylist = []
            gflist = []
            wllist = []
            equivwidthlist = []
            abund_list = []

            if ti2:
                # abund data from the literature
                data144 = dataabundti2
                # ew data
                tiews = data144ti2ew

            else:
                data144 = dataabundti1
                tiews = data144ti1ew
            # Making the dictionary of equiv widths with karin's ews to use its wavelengths to compare to the ones in lit.
            for line in (tiews.split("\n")):
                ewdict[float(line.split()[0])] = float(line.split()[1])
            print(ewdict)

            #  36- 43 F8.1   10-4nm   EW-122563          Equivalent width, HD 122563, milli-Angstroms
            for line in (data144.split("\n")):
                split = line.split()
                wl = float(split[0])
                # Only use the ones in both Karin's and lit
                gf = float(split[4])
                try:
                    equivwidth = ewdict[round(wl, 1)]
                except KeyError:
                    continue

                if equivwidth == 0.0:
                    continue
                print(equivwidth)
                gflist.append(gf)
                energylist.append(float(split[3]))

                wllist.append(wl)
                # Go from mAA to AA

                equivwidthlist.append((equivwidth / 1000))
                # Lte abundance
                lte = float(split[-1])
                abund_list.append(lte)

            return wllist, equivwidthlist, abund_list, gflist, energylist

        def get_arcturus_karin():
                dataabundti1 = """Ti i 5219.70 0.02 −2.24 28.8 4.97 0.01 155.0 4.74 0.06 −0.23 0.06
        Ti i 5295.77 1.07 −1.58 13.0 4.89 0.01 104.5 4.58 0.03 −0.32 0.04
        Ti i 5490.15 1.46 −0.88 22.1 4.86 0.01 112.9 4.54 0.04 −0.32 0.04
        Ti i 5716.44 2.30 −0.72 6.2 4.85 0.01 64.2 4.68 0.02 −0.17 0.02
        Ti i 6092.79 1.89 −1.32 4.1 4.85 0.01 58.3 4.61 0.02 −0.24 0.02
        Ti i 6303.75 1.44 −1.51 8.2 4.91 0.01 92.1 4.66 0.03 −0.25 0.03
        Ti i 6312.23 1.46 −1.50 8.0 4.90 0.01 91.7 4.66 0.03 −0.24 0.03
        Ti i 7357.73 1.44 −1.07 23.1 4.95 0.01 131.8 4.69 0.04 −0.27 0.04
        Ti i 8675.37 1.07 −1.61 19.7 4.95 0.01 148.9 4.72 0.03 −0.23 0.04
        Ti i 8682.98 1.05 −1.88 12.2 4.96 0.01 129.5 4.72 0.03 −0.24 0.04
        Ti i 8734.71 1.05 −2.33 5.3 5.00 0.01 94.9 4.72 0.02 −0.29 0.03"""

                dataabundti2 = """Ti ii 4583.41 1.17 −2.87 31.3 4.97 0.01 82.0 4.65 0.03 −0.32 0.03
        Ti ii 4708.66 1.24 −2.37 50.0 4.95 0.02 100.1 4.61 0.04 −0.34 0.05
        Ti ii 5336.78 1.58 −1.63 70.9 4.95 0.03 125.1 4.73 0.06 −0.22 0.06
        Ti ii 5418.77 1.58 −2.11 49.0 4.95 0.02 97.8 4.65 0.04 −0.30 0.04"""

                datati1ew = """4759.5       112.543     1.788
4778.3        84.851     1.277
4913.6       137.628     2.769
4915.2        72.443     0.911
4926.1        93.792     0.497
4964.7         0.000     0.000
4981.7         0.000     0.000
4997.1       167.350     8.078
4999.5       238.316     8.286
5009.6       159.203     6.120
5016.2       174.672     3.573
5024.8       176.244     5.328
5040.1         0.000     0.000
5043.6       123.686     5.131
5113.4         0.000     0.000
5145.5       135.898     7.219
5147.5       181.900    11.725
5152.2       170.270    11.641
5210.4         0.000     0.000
5223.6         0.000     0.000
5224.3         0.000     0.000
5231.0        29.035     0.177
5282.4       101.973     0.890
5300.0        75.916     0.836
5338.3        67.137     1.479
5366.6        75.554     2.440
5384.6        57.245     0.779
5448.9         0.000     0.000
5449.1         0.000     0.000
5453.6        76.460     2.076
5465.8        29.690     0.205
5471.2        88.090     0.473
5490.8         0.000     0.000
5514.3         0.000     0.000
5514.5         0.000     0.000
5739.5        60.135     0.332
5866.5       162.541     2.731
5918.5       111.474     0.589
5922.1       127.487     1.442
5937.8        95.440     0.507
6091.2        87.629     0.475
6336.1        77.201     0.419
6395.5        22.009     0.152
6497.7        65.279     0.363
6554.2       117.196     0.666
6556.1       128.324     1.458
8692.3       110.286     2.062
8778.7         0.000     0.000"""

                data2ew = """4798.6       106.218    12.979
4865.6       107.891     2.043
4865.6       107.891     2.043
4874.0        57.401     0.589
4911.2         0.000     0.000
5005.2        68.903     2.361
5185.9         0.000     0.000
5211.5        65.531     1.450
5381.0         0.000     0.000
5490.7         0.000     0.000"""
                use_saturated = False
                if not use_saturated:
                    # 5300.0        75.916     0.836
                    # 6091.2        87.629     0.475
                    # 6497.7        65.279     0.363
                    # 6336.1        77.201     0.419
                    # 5384.6        57.245     0.779
                    # were all too saturated still
                    datati1ew = """5210.4         0.000     0.000
5223.6         0.000     0.000
5224.3         0.000     0.000
5231.0        29.035     0.177
5300.0        75.916     0.836
5338.3        67.137     1.479
5366.6        75.554     2.440
5384.6        57.245     0.779
5448.9         0.000     0.000
5449.1         0.000     0.000
5453.6        76.460     2.076
5465.8        29.690     0.205
5471.2        88.090     0.473
5490.8         0.000     0.000
5514.3         0.000     0.000
5514.5         0.000     0.000
5739.5        60.135     0.332
5918.5       111.474     0.589
5922.1       127.487     1.442
5937.8        95.440     0.507
6091.2        87.629     0.475
6336.1        77.201     0.419
6395.5        22.009     0.152
6497.7        65.279     0.363
6554.2       117.196     0.666
6556.1       128.324     1.458
8692.3       110.286     2.062
8778.7         0.000     0.000"""

                    data2ew = """4874.0        57.401     0.589
4911.2         0.000     0.000
5005.2        68.903     2.361
5185.9         0.000     0.000
5211.5        65.531     1.450
5381.0         0.000     0.000
5490.7         0.000     0.000"""

                ewdict = {}

                energylist = []
                gflist = []
                wllist = []
                equivwidthlist = []
                abund_list = []

                if ti2:
                    # abund data from the literature
                    data144 = dataabundti2
                    ewdata144 = data2ew
                else:
                    data144 = dataabundti1
                    ewdata144 = datati1ew
                # Making the dictionary of equiv widths with karin's ews to use its wavelengths to compare to the ones in lit.

                #  36- 43 F8.1   10-4nm   EW-122563          Equivalent width, HD 122563, milli-Angstroms
                for line in (ewdata144.split("\n")):
                    split = line.split()
                    wl = float(split[0])
                    # Only use the ones in both Karin's and lit

                    gf = float(split[1])
                    equivwidth = float(split[1])

                    if equivwidth < 1:
                        continue
                    print(equivwidth)
                    gflist.append(gf)
                    energylist.append((4.135667E-15 * 299792458 / float(split[0])) / rte * rtc)

                    wllist.append(wl)
                    # Go from mAA to AA

                    equivwidthlist.append((equivwidth / 1000))
                    # Lte abundance
                    lte = 4.7
                    abund_list.append(lte)

                return wllist, equivwidthlist, abund_list, gflist, energylist

        def get_arcturus():
                    dataabundti1 = """Ti i 5219.70 0.02 −2.24 28.8 4.97 0.01 155.0 4.74 0.06 −0.23 0.06
Ti i 5295.77 1.07 −1.58 13.0 4.89 0.01 104.5 4.58 0.03 −0.32 0.04
Ti i 5490.15 1.46 −0.88 22.1 4.86 0.01 112.9 4.54 0.04 −0.32 0.04
Ti i 5716.44 2.30 −0.72 6.2 4.85 0.01 64.2 4.68 0.02 −0.17 0.02
Ti i 6092.79 1.89 −1.32 4.1 4.85 0.01 58.3 4.61 0.02 −0.24 0.02
Ti i 6303.75 1.44 −1.51 8.2 4.91 0.01 92.1 4.66 0.03 −0.25 0.03
Ti i 6312.23 1.46 −1.50 8.0 4.90 0.01 91.7 4.66 0.03 −0.24 0.03
Ti i 7357.73 1.44 −1.07 23.1 4.95 0.01 131.8 4.69 0.04 −0.27 0.04
Ti i 8675.37 1.07 −1.61 19.7 4.95 0.01 148.9 4.72 0.03 −0.23 0.04
Ti i 8682.98 1.05 −1.88 12.2 4.96 0.01 129.5 4.72 0.03 −0.24 0.04
Ti i 8734.71 1.05 −2.33 5.3 5.00 0.01 94.9 4.72 0.02 −0.29 0.03"""

                    dataabundti2 = """Ti ii 4583.41 1.17 −2.87 31.3 4.97 0.01 82.0 4.65 0.03 −0.32 0.03
Ti ii 4708.66 1.24 −2.37 50.0 4.95 0.02 100.1 4.61 0.04 −0.34 0.05
Ti ii 5336.78 1.58 −1.63 70.9 4.95 0.03 125.1 4.73 0.06 −0.22 0.06
Ti ii 5418.77 1.58 −2.11 49.0 4.95 0.02 97.8 4.65 0.04 −0.30 0.04"""

                    datati1ew = """4759.5       112.543     1.788
4778.3        84.851     1.277
4913.6       137.628     2.769
4915.2        72.443     0.911
4926.1        93.792     0.497
4964.7         0.000     0.000
4981.7         0.000     0.000
4997.1       167.350     8.078
4999.5       238.316     8.286
5009.6       159.203     6.120
5016.2       174.672     3.573
5024.8       176.244     5.328
5040.1         0.000     0.000
5043.6       123.686     5.131
5113.4         0.000     0.000
5145.5       135.898     7.219
5147.5       181.900    11.725
5152.2       170.270    11.641
5210.4         0.000     0.000
5223.6         0.000     0.000
5224.3         0.000     0.000
5231.0        29.035     0.177
5282.4       101.973     0.890
5300.0        75.916     0.836
5338.3        67.137     1.479
5366.6        75.554     2.440
5384.6        57.245     0.779
5448.9         0.000     0.000
5449.1         0.000     0.000
5453.6        76.460     2.076
5465.8        29.690     0.205
5471.2        88.090     0.473
5490.8         0.000     0.000
5514.3         0.000     0.000
5514.5         0.000     0.000
5739.5        60.135     0.332
5866.5       162.541     2.731
5918.5       111.474     0.589
5922.1       127.487     1.442
5937.8        95.440     0.507
6091.2        87.629     0.475
6336.1        77.201     0.419
6395.5        22.009     0.152
6497.7        65.279     0.363
6554.2       117.196     0.666
6556.1       128.324     1.458
8692.3       110.286     2.062
8778.7         0.000     0.000"""

                    data2ew = """4798.6       106.218    12.979
4865.6       107.891     2.043
4865.6       107.891     2.043
4874.0        57.401     0.589
4911.2         0.000     0.000
5005.2        68.903     2.361
5185.9         0.000     0.000
5211.5        65.531     1.450
5381.0         0.000     0.000
5490.7         0.000     0.000"""
                    use_saturated = True
                    if not use_saturated:
                        # 5300.0        75.916     0.836
                        # 6091.2        87.629     0.475
                        # 6497.7        65.279     0.363
                        # 6336.1        77.201     0.419
                        # 5384.6        57.245     0.779
                        # were all too saturated still
                        datati1ew = """5210.4         0.000     0.000
5223.6         0.000     0.000
5224.3         0.000     0.000
5231.0        29.035     0.177
5300.0        75.916     0.836
5338.3        67.137     1.479
5366.6        75.554     2.440
5384.6        57.245     0.779
5448.9         0.000     0.000
5449.1         0.000     0.000
5453.6        76.460     2.076
5465.8        29.690     0.205
5471.2        88.090     0.473
5490.8         0.000     0.000
5514.3         0.000     0.000
5514.5         0.000     0.000
5739.5        60.135     0.332
5918.5       111.474     0.589
5922.1       127.487     1.442
5937.8        95.440     0.507
6091.2        87.629     0.475
6336.1        77.201     0.419
6395.5        22.009     0.152
6497.7        65.279     0.363
6554.2       117.196     0.666
6556.1       128.324     1.458
8692.3       110.286     2.062
8778.7         0.000     0.000"""

                        data2ew = """4874.0        57.401     0.589
4911.2         0.000     0.000
5005.2        68.903     2.361
5185.9         0.000     0.000
5211.5        65.531     1.450
5381.0         0.000     0.000
5490.7         0.000     0.000"""

                    ewdict = {}

                    energylist = []
                    gflist = []
                    wllist = []
                    equivwidthlist = []
                    abund_list = []

                    if ti2:
                        # abund data from the literature
                        data144 = dataabundti2
                        ewdata144 = data2ew
                    else:
                        data144 = dataabundti1
                        ewdata144 = datati1ew
                    # Making the dictionary of equiv widths with karin's ews to use its wavelengths to compare to the ones in lit.

                    #  36- 43 F8.1   10-4nm   EW-122563          Equivalent width, HD 122563, milli-Angstroms
                    for line in (ewdata144.split("\n")):
                        split = line.split()
                        wl = float(split[0])
                        # Only use the ones in both Karin's and lit

                        gf = float(split[1])
                        equivwidth = float(split[1])

                        if equivwidth < 1:
                            continue
                        print(equivwidth)
                        gflist.append(gf)
                        energylist.append((4.135667E-15 * 299792458 / float(split[0])) / rte * rtc)

                        wllist.append(wl)
                        # Go from mAA to AA

                        equivwidthlist.append((equivwidth / 1000))
                        # Lte abundance
                        lte = 4.7
                        abund_list.append(lte)

                    return wllist, equivwidthlist, abund_list, gflist, energylist




        def get_arcturusSmall():
            """removed Ti i 5702.66 2.29 -0.59 8.1 4.85 0.01 63.0 4.53 0.02 -0.32 0.02
            Ti i 5716.44 2.30 -0.72 6.2 4.85 0.01 64.2 4.68 0.02 -0.17 0.02
        Ti i 6599.10 0.90 -2.03 9.9 4.97 0.01 115.2 4.73 0.03 -0.24 0.04
        Ti i 5219.70 0.02 -2.24 28.8 4.97 0.01 155.0 4.74 0.06 -0.23 0.06
        """
            """ 2nd columns are arctuurs, first are sun
              Species 	Wavelength 	EP 	log gf 	EW 	AX 	Error 	EW 	AX 	Error 	[X/H] 	Error
                        (Å) 	(eV) 	  	(mÅ) 	  	  	(mÅ) 	  	
                      https://iopscience.iop.org/article/10.1088/0004-637X/743/2/135#references  """
            dataabundti1 = """Ti i 5295.77 1.07 -1.58 13.0 4.89 0.01 104.5 4.58 0.03 -0.32 0.04
        Ti i 5490.15 1.46 -0.88 22.1 4.86 0.01 112.9 4.54 0.04 -0.32 0.04
        Ti i 6092.79 1.89 -1.32 4.1 4.85 0.01 58.3 4.61 0.02 -0.24 0.02
        Ti i 6303.75 1.44 -1.51 8.2 4.91 0.01 92.1 4.66 0.03 -0.25 0.03
        Ti i 6312.23 1.46 -1.50 8.0 4.90 0.01 91.7 4.66 0.03 -0.24 0.03
        Ti i 7357.73 1.44 -1.07 23.1 4.95 0.01 131.8 4.69 0.04 -0.27 0.04
        Ti i 8675.37 1.07 -1.61 19.7 4.95 0.01 148.9 4.72 0.03 -0.23 0.04
        Ti i 8682.98 1.05 -1.88 12.2 4.96 0.01 129.5 4.72 0.03 -0.24 0.04
        Ti i 8734.71 1.05 -2.33 5.3 5.00 0.01 94.9 4.72 0.02 -0.29 0.03"""

            dataabundti2 = """Ti ii 4583.41 1.17 -2.87 31.3 4.97 0.01 82.0 4.65 0.03 -0.32 0.03
        Ti ii 4708.66 1.24 -2.37 50.0 4.95 0.02 100.1 4.61 0.04 -0.34 0.05
        Ti ii 5336.78 1.58 -1.63 70.9 4.95 0.03 125.1 4.73 0.06 -0.22 0.06
        Ti ii 5418.77 1.58 -2.11 49.0 4.95 0.02 97.8 4.65 0.04 -0.30 0.04"""

            ewdict = {}

            energylist = []
            gflist = []
            wllist = []
            equivwidthlist = []
            abund_list = []

            if ti2:
                # abund data from the literature
                data144 = dataabundti2

            else:
                data144 = dataabundti1
            # Making the dictionary of equiv widths with karin's ews to use its wavelengths to compare to the ones in lit.

            #  36- 43 F8.1   10-4nm   EW-122563          Equivalent width, HD 122563, milli-Angstroms
            for line in (data144.split("\n")):
                split = line.split()
                wl = float(split[2])
                # Only use the ones in both Karin's and lit

                gf = float(split[4])
                try:
                    equivwidth = float(split[8])
                except KeyError:
                    continue

                if equivwidth == 0.0:
                    continue
                print(equivwidth)
                gflist.append(gf)
                energylist.append(float(split[3]))

                wllist.append(wl)
                # Go from mAA to AA

                equivwidthlist.append((equivwidth / 1000))
                # Lte abundance
                lte = float(split[9])
                abund_list.append(lte)

            return wllist, equivwidthlist, abund_list, gflist, energylist


        def get_84():
            """   1-  9 F9.3   0.1nm WaveAir  Wavelength in air; in Angstroms
          11- 15 F5.3   eV    LowLev   Lower level energy
          17- 21 F5.2   [-]   log(gf)  Log of degeneracy times oscillator strength
          23- 26 F4.2   [-]   log(eps) Log of abundance"""
            # Not in karin's
            # 4535.918 0.818 -0.07 3.13
            # 4536.040 0.812 -0.16 3.19
            # 3346.741 0.135 -1.04 3.15
            # 3377.575 0.021 -0.21 3.05
            # 3981.762 0.000 -0.27 3.13
            #
            data84ti1 = """2644.263 0.021 -0.08 3.15
        2646.634 0.048 +0.06 3.15
        2956.132 0.048 +0.12 2.99
        3186.451 0.000 +0.01 3.05
        3191.992 0.021 +0.16 3.03
        3199.914 0.048 +0.31 3.05
        3314.421 1.066 +0.10 3.17
        3354.633 0.021 +0.11 3.10
        3370.434 0.000 -0.40 3.10
        3371.452 0.048 +0.23 3.08
        3385.941 0.048 -0.18 3.08
        3635.462 0.000 +0.10 3.09
        3642.673 0.021 +0.21 3.07
        3717.391 0.000 -1.19 3.15
        3725.152 1.066 -0.34 3.10
        3729.807 0.000 -0.28 3.17
        3741.059 0.021 -0.15 3.18
        3752.858 0.048 +0.05 3.05
        3904.783 0.899 +0.15 3.13
        3924.526 0.021 -0.87 3.20
        3929.874 0.000 -0.99 3.18
        3947.768 0.021 -0.89 3.03
        3956.334 0.021 -0.38 3.13
        3958.205 0.048 -0.11 3.19
        3989.758 0.021 -0.13 3.12
        3998.636 0.048 +0.02 3.10
        4008.927 0.021 -1.00 3.20
        4024.571 0.048 -0.92 3.13
        4287.403 0.835 -0.37 3.17
        4298.666 0.818 -0.11 3.20
        4305.907 0.848 +0.49 3.09
        4427.098 1.501 +0.23 3.10
        4449.142 1.886 +0.47 3.03
        4518.022 0.825 -0.25 3.17
        4533.239 0.848 +0.54 3.15
        4534.776 0.835 +0.35 3.13
        4535.569 0.825 +0.14 3.12
        4548.764 0.825 -0.28 3.15
        4555.483 0.848 -0.40 3.08
        4617.269 1.748 +0.44 3.11
        4981.731 0.848 +0.57 3.12
        4991.066 0.835 +0.45 3.13
        4999.503 0.825 +0.32 3.13
        5014.276 0.812 +0.04 3.15
        5022.868 0.825 -0.33 3.05
        5036.464 1.442 +0.14 3.25
        5173.743 0.000 -1.06 3.18
        5192.969 0.021 -0.95 3.16"""
            # 3119.800 1.242 -0.52 2.95
            # 3276.992 0.122 -2.44 3.12
            # 3288.576 1.230 -0.98 2.95
            # 3309.532 1.164 -1.69 3.05
            # 3321.698 1.230 -0.34 2.99
            # 3348.840 0.122 -1.18 3.11
            # 3477.180 0.122 -0.95 3.23
            # 3759.292 0.607 +0.28 3.15
            # 3761.321 0.573 +0.18 3.10
            # 3981.991 0.573 -2.54 3.11
            # 4314.971 1.160 -1.15 3.12
            # 4391.026 1.230 -2.30 3.08
            # 4421.938 2.060 -1.64 3.11
            # 3288.427 1.242 -1.25 3.12
            # 4394.059 1.220 -1.77 3.15

            data84ti2 = """2474.194 0.049 -2.42 3.17
        2581.711 1.083 -1.58 3.30
        2717.297 1.130 -1.49 3.17
        2725.773 1.115 -1.55 3.13
        2761.287 1.079 -1.35 3.07
        2784.638 0.607 -1.99 3.05
        2806.471 1.220 -1.54 3.23
        2820.362 0.573 -1.91 3.14
        2853.931 0.607 -1.55 3.10
        2888.929 0.573 -1.36 3.17
        3110.080 1.581 -1.21 3.10
        3122.070 1.236 -1.57 3.08
        3144.719 0.112 -2.36 3.17
        3184.117 0.012 -2.52 3.14
        3195.715 1.083 -1.39 3.05
        3213.121 0.012 -2.28 3.10
        3249.366 1.079 -1.35 2.95
        3263.683 1.164 -1.14 3.07
        3271.648 1.242 -0.28 2.95
        3275.290 1.079 -1.48 3.03
        3276.772 1.179 -0.89 3.03
        3279.988 1.115 -1.19 3.08
        3287.654 1.891 +0.45 2.87
        3288.141 0.135 -1.99 3.15
        3301.673 1.164 -1.91 3.12
        3302.095 0.151 -2.34 3.13
        3307.721 0.122 -2.66 3.15
        3319.081 0.135 -3.00 3.17
        3337.847 1.236 -1.25 3.00
        3346.915 1.160 -1.95 3.11
        3352.069 1.220 -1.28 3.11
        3369.203 1.230 -1.42 3.01
        3374.346 1.236 -1.06 3.06
        3379.913 1.242 -1.66 3.05
        3388.751 1.236 -1.02 2.99
        3407.202 0.049 -1.97 3.11
        3416.957 1.236 -1.54 3.01
        3422.666 1.242 -2.62 3.05
        3452.465 2.046 -0.56 3.03
        3456.384 2.060 -0.11 2.95
        3476.963 0.151 -2.20 3.17
        3489.736 0.135 -2.00 3.10
        3500.333 0.122 -2.04 3.14
        3520.252 2.046 -0.18 2.89
        3533.854 2.060 -1.31 2.90
        3561.576 0.573 -2.04 3.10
        3706.217 1.565 -0.67 3.01
        3748.003 2.596 -0.55 3.05
        3761.872 2.588 -0.42 2.95
        3774.647 0.573 -2.65 3.15
        3776.053 1.581 -1.24 3.05
        3786.323 0.607 -2.60 3.15
        3813.388 0.607 -1.89 3.15
        3882.287 1.115 -1.87 3.11
        3913.461 1.115 -0.36 3.12
        3987.606 0.607 -2.73 3.18
        4012.384 0.573 -1.78 3.18
        4025.129 0.607 -2.11 3.15
        4028.338 1.890 -0.92 3.08
        4053.821 1.891 -1.07 3.05
        4161.529 1.083 -2.09 3.08
        4163.644 2.588 -0.13 3.07
        4171.904 2.596 -0.30 3.05
        4301.923 1.160 -1.21 3.12
        4312.860 1.179 -1.12 3.11
        4320.950 1.164 -1.88 3.18
        4330.698 1.179 -2.09 3.09
        4367.652 2.588 -0.86 3.12
        4395.839 1.242 -1.93 3.10
        4409.518 1.230 -2.53 3.05
        4418.331 1.236 -1.99 3.15
        4444.554 1.115 -2.20 3.13
        4450.482 1.083 -1.52 3.15
        4488.324 3.121 -0.50 3.17
        4549.622 1.583 -0.22 3.12
        4657.201 1.242 -2.29 3.15
        4708.663 1.236 -2.35 3.15
        4763.883 1.220 -2.40 3.17
        5013.686 1.581 -2.14 3.15
        5129.156 1.890 -1.34 3.11
        5185.902 1.891 -1.41 3.09
        5336.786 1.581 -1.60 3.12
        5381.022 1.565 -1.97 3.14
        5418.768 1.581 -2.13 3.17"""
            # 'equiv widths of the lines from karin. Not exact matches.
            # line, ew, error
            ti1ews = """2644.3         0.000     0.000
        2646.6        16.723     0.881
        2956.1        15.147     0.708
        3186.5        18.269     0.249
        3192.0        23.646     0.293
        3199.9         0.000     0.000
        3314.4         0.000     0.000
        3354.6        20.764     0.327
        3370.4         7.455     0.183
        3371.5        24.541     0.311
        3377.6        13.584     0.198
        3385.9        10.698     0.197
        3598.7         3.111     0.140
        3635.5        20.818     0.243
        3642.7         0.000     0.000
        3717.4         0.000     0.000
        3725.2         0.000     0.000
        3729.8        12.278     0.169
        3741.1        15.099     0.198
        3752.9         0.000     0.000
        3904.8         6.148     0.145
        3924.5         4.474     0.137
        3929.9         0.000     0.000
        3947.8         4.528     0.133
        3956.3         0.000     0.000
        3958.2        21.996     0.241
        3981.8        22.108     0.218
        3989.8        20.710     0.235
        3998.6        22.842     0.249
        4008.9         4.184     0.133
        4024.6         4.603     0.338
        4287.4         2.993     0.116
        4298.7         0.000     0.000
        4305.9        20.131     0.231
        4427.1         2.837     0.180
        4449.1         2.994     0.129
        4518.0         3.747     0.127
        4533.2        17.596     0.200
        4534.8        12.076     0.158
        4535.6         9.021     0.143
        4548.8         4.395     0.144
        4555.5         2.536     0.115
        4617.3         2.982     0.111
        4691.3         4.905     0.194
        4981.7        20.401     0.190
        4991.1        16.413     0.361
        4999.5        13.348     0.168
        5014.3         0.000     0.000
        5022.9         2.989     0.115
        5036.5         4.104     0.117
        5173.7         3.627     0.111
        5193.0         4.682     0.113"""
            ti2ews = """2474.2        22.823     1.818
        2517.4        53.129     4.940
        2571.0        62.659     7.945
        2581.7        22.415     1.166
        2717.3        26.340     5.347
        2725.8        20.050     1.534
        2761.3        23.567     0.923
        2784.6        11.026     0.900
        2806.5         0.000     0.000
        2820.4        21.286     0.834
        2832.2        65.543     2.287
        2841.9        58.541     3.441
        2853.9         0.000     0.000
        2862.3        49.528     4.582
        2884.1        60.614     1.318
        2888.9         0.000     0.000
        3017.2        48.744     0.907
        3029.7        38.428     0.968
        3046.7        40.677     1.121
        3056.7        42.627     1.063
        3058.1        54.899     1.022
        3071.2        52.036     0.632
        3089.4        42.717     0.454
        3103.8        51.629     0.712
        3105.1        52.530     0.787
        3106.2        56.670     0.543
        3110.1        12.605     1.576
        3117.7        41.388     1.879
        3119.8        41.311     1.540
        3122.1        11.697     0.540
        3144.7        24.452     1.897
        3154.2        69.833     0.771
        3184.1        18.383     0.716
        3195.7         0.000     0.000
        3197.5        41.150     0.474
        3203.4        52.780     1.610
        3213.1        26.246     0.873
        3214.8        67.276     0.971
        3224.2        53.705     0.554
        3226.8        52.173     0.718
        3236.1        53.626     5.112
        3249.4        27.618     0.442
        3263.7        26.920     0.394
        3271.6         0.000     0.000
        3272.1        51.744     1.237
        3275.3        16.020     0.224
        3276.8         0.000     0.000
        3277.0        15.658     0.229
        3278.3        58.420     0.502
        3280.0        28.995     0.699
        3282.3        52.539     0.561
        3287.7         0.000     0.000
        3288.1         0.000     0.000
        3288.4        19.922     0.893
        3288.6        27.351     0.709
        3301.7         0.000     0.000
        3302.1        20.723     0.304
        3307.7        12.661     0.204
        3308.8        68.140     0.518
        3309.5        11.933     0.190
        3315.3        44.200     0.578
        3318.0        73.533     0.530
        3319.1         7.573     0.178
        3321.7        54.425     0.586
        3337.8        19.774     0.279
        3343.8        69.415     0.495
        3348.8        68.177     2.408
        3352.1        22.323     0.298
        3369.2        15.098     0.212
        3374.3        28.908     3.204
        3379.9         0.000     0.000
        3388.8        27.381     0.364
        3407.2        39.785     0.969
        3409.8        43.641     0.506
        3417.0        11.353     0.230
        3422.7         0.000     0.000
        3452.5        15.914     0.262
        3456.4        30.175     0.368
        3461.5        82.020     7.164
        3477.2        80.637     1.814
        3489.7        42.603     0.469
        3491.0        74.271     0.491
        3500.3        32.866     0.354
        3504.9        56.694     1.011
        3520.3        26.988     0.310
        3533.9         2.634     0.151
        3535.4        32.222     0.321
        3561.6        17.707     0.465
        3573.7        35.625     1.841
        3596.0        53.092     0.638
        3706.2         0.000     0.000
        3741.6        59.641     0.677
        3748.0         0.000     0.000
        3757.7        45.258     0.503
        3759.3       118.779     0.718
        3761.3       112.735     0.673
        3761.9         9.989     0.157
        3774.6         0.000     0.000
        3776.1         0.000     0.000
        3786.3         8.811     0.556
        3813.4        27.090     0.289
        3882.3         0.000     0.000
        3900.5        80.301     0.528
        3913.5         0.000     0.000
        3982.0         0.000     0.000
        3987.6         5.331     0.142
        4012.4        38.560     0.369
        4025.1        19.407     0.203
        4028.3        17.673     0.216
        4053.8        13.115     0.171
        4161.5         8.613     0.148
        4163.6        23.253     0.242
        4171.9        18.053     0.208
        4290.2        53.161     0.593
        4300.0        72.296     0.782
        4301.9        38.264     0.418
        4312.9        42.831     0.503
        4315.0         0.000     0.000
        4316.8         3.773     0.122
        4321.0        13.552     0.406
        4330.2         0.000     0.000
        4330.7         0.000     0.000
        4367.7         0.000     0.000
        4391.0         6.717     0.141
        4394.1        13.455     0.167
        4395.8         9.203     0.146
        4409.5         2.082     0.116
        4418.3         8.415     0.142
        4421.9         3.367     0.127
        4443.8        69.175     0.448
        4444.6         6.948     0.131
        4468.5        71.117     0.462
        4488.3         4.765     0.133
        4493.5         1.934     0.111
        4501.3        65.839     0.474
        4518.3         4.121     0.132
        4545.1         3.986     0.133
        4549.6         0.000     0.000
        4552.3         0.000     0.000
        4572.0        63.803     0.423
        4583.4         1.789     0.103
        4609.3         0.000     0.000
        4657.2         4.909     0.147
        4708.7         4.197     0.114
        4719.5         0.000     0.000
        4762.8         1.443     0.119
        4763.9         4.295     0.120
        4764.5         2.066     0.106
        4798.5         2.612     0.198
        4865.6         0.000     0.000
        4874.0         0.000     0.000
        4911.2         3.448     0.110
        5005.2         0.000     0.000
        5013.7         4.012     0.136
        5069.1         0.000     0.000
        5072.3         0.000     0.000
        5129.2         9.976     0.154
        5185.9         8.391     0.136
        5211.5         1.205     0.097
        5336.8        10.452     0.138
        5381.0         5.299     0.141
        5396.2         0.000     0.000
        5418.8         3.676     0.153
        6680.1         0.000     0.000
        9432.2         0.000     0.000"""
            ewdict = {}

            energylist = []
            gflist = []
            wllist = []
            equivwidthlist = []
            abund_list = []
            if ti2:
                data84 = data84ti2
                tiews = ti2ews

            else:
                data84 = data84ti1
                tiews = ti1ews
            # Making the dictionary of equiv widths with karin's ews to use its wavelengths to compare to the ones in lit.
            for line in (tiews.split("\n")):
                ewdict[float(line.split()[0])] = float(line.split()[1])
            print(ewdict)
            for line in (data84.split("\n")):
                split = line.split()
                wl = float(split[0])
                # Only use the ones in both Karin's and lit
                gf = float(split[2])
                try:
                    equivwidth = ewdict[round(wl, 1)]
                except KeyError:
                    continue

                if equivwidth == 0.0:
                    continue
                print(equivwidth)
                gflist.append(gf)
                energylist.append(float(split[1]))

                wllist.append(wl)
                # Go from mAA to AA

                equivwidthlist.append(equivwidth / 1000)
                # Lte abundance
                lte = float(split[-1])
                abund_list.append(lte)

            return wllist, equivwidthlist, abund_list, gflist, energylist


        # Using Karin's EW rather than the paper's
        def get_144Karin():
            # Species  λ(Å)  χex(eV) log gfVALD     gfNIST    EW(mÅ)  σEW(mÅ) A(X) σA(X)

            # These are for the literature abundance. We get the EWs from Karin's
            dataabundti1 = """TiI   3989.757  0.021  -0.198          -0.126      21.37  0.73  2.73  0.02
            TiI   3998.637  0.048  -0.056           0.016      24.37  0.40  2.69  0.01
            TiI   4533.240  0.848   0.476           0.476      16.57  0.39  2.69  0.01
            TiI   4534.776  0.836   0.280           0.280      11.62  0.15  2.69  0.01
            TiI   4981.731  0.848   0.504           0.504      18.61  0.25  2.70  0.01
            TiI   4991.067  0.836   0.380           0.380      15.63  0.23  2.71  0.01
            TiI   4999.502  0.826   0.250           0.250      12.21  0.17  2.71  0.01
            TiI   5064.652  0.048  -0.991          -0.929       4.75  0.08  2.71  0.01
            TiI   5173.740  0.000  -1.118          -1.070       4.15  0.09  2.72  0.01
            TiI   5192.969  0.021  -1.006          -0.960       5.14  0.09  2.73  0.01
            TiI   5210.384  0.048  -0.884          -0.850       5.87  0.11  2.70  0.01"""
            # Deleted due to no line
            # TiII  4417.714  1.165  -1.230          -1.430      32.10  0.35  2.73  0.01
            # TiII  4464.449  1.161  -1.810          -2.080      11.61  0.27  2.73  0.01
            # TiII  4470.853  1.165  -2.060          -2.280       5.66  0.10  2.64  0.01
            # TiII  4533.960  1.237  -0.540          -0.770     59.54  1.28  2.66  0.03
            # TiII  4563.757  1.221  -0.790          -0.960      49.56  0.41  2.69  0.01
            # TiII  5188.687  1.582  -1.050          -1.220      21.25  0.34  2.66  0.01
            # TiII  5226.538  1.566  -1.260          -1.290      15.23  0.18  2.67  0.01
            # blended (below)
            # TiII  4394.059  1.221  -1.770          -1.784      11.06  0.40  2.73  0.02
            dataabundti2 = """TiII  3913.461  1.116  -0.410          -0.416      67.64  0.44  2.69  0.01
            TiII  4028.338  1.892  -0.960          -0.959      12.21  0.20  2.67  0.01
            TiII  4290.215  1.165  -0.930          -0.848      46.82  1.22  2.74  0.03
            TiII  4395.839  1.243  -1.970          -1.928       7.49  1.05  2.76  0.06
            TiII  4399.765  1.237  -1.220          -1.186      30.09  0.66  2.75  0.02
            TiII  4418.331  1.237  -1.990          -1.965       6.40  0.15  2.70  0.01
            TiII  4443.801  1.080  -0.700          -0.717      60.61  0.57  2.70  0.01
            TiII  4444.555  1.116  -2.210          -2.030       5.38  0.14  2.72  0.01
            TiII  4450.482  1.084  -1.510          -1.518      23.92  0.65  2.74  0.02
            TiII  4468.492  1.131  -0.600          -0.620      62.82  0.59  2.69  0.01
            TiII  4501.270  1.116  -0.760          -0.767      57.13  0.50  2.71  0.01
            TiII  4571.971  1.572  -0.320          -0.317      52.66  0.48  2.63  0.01
            TiII  5129.156  1.892  -1.240          -1.239       6.57  0.36  2.57  0.02
            TiII  5185.902  1.893  -1.490          -1.487       4.89  0.11  2.68  0.01
            TiII  5336.786  1.582  -1.590          -1.700       7.86  0.13  2.68  0.01
            TiII  5381.021  1.566  -1.920          -1.921       3.64  0.08  2.64  0.01"""

            # deleted for having no line in ours/too small an equiv width
            # TiI   4656.468  0.000  -1.345          -1.283       2.41  0.10  2.74  0.02
            # TiI   4681.908  0.048  -1.071          -1.009       3.66  0.15  2.70  0.02
            # Species  λ(Å)  χex(eV) log gfVALD     gfNIST    EW(mÅ)  σEW(mÅ) A(X) σA(X)

            # This is Karin's EW
            data144ti1 = """2644.3         0.000     0.000
        2646.6        21.293     0.479
        2956.1         0.000     0.000
        3186.5         0.000     0.000
        3192.0        25.781     0.429
        3199.9        28.752     0.341
        3314.4         5.888     0.195
        3354.6        22.144     0.310
        3370.4         9.251     0.198
        3371.5        25.988     0.317
        3377.6         0.000     0.000
        3385.9        11.835     0.210
        3598.7         3.204     0.141
        3635.5        24.615     0.323
        3642.7         0.000     0.000
        3717.4         1.938     0.118
        3725.2         0.000     0.000
        3729.8        14.543     0.190
        3741.1        18.645     0.246
        3752.9         0.000     0.000
        3904.8         6.980     0.147
        3924.5         4.706     0.152
        3929.9         0.000     0.000
        3947.8         5.038     0.150
        3956.3         0.000     0.000
        3958.2        22.101     0.221
        3981.8        25.044     0.268
        3989.8        22.249     0.317
        3998.6        25.204     0.273
        4008.9         4.274     0.133
        4024.6         3.899     0.172
        4287.4         1.681     0.107
        4298.7         0.000     0.000
        4305.9         0.000     0.000
        4427.1         0.000     0.000
        4449.1         2.543     0.107
        4518.0         2.945     0.116
        4533.2        16.912     0.177
        4534.8        11.320     0.158
        4535.6         7.941     0.142
        4548.8         3.542     0.119
        4555.5         2.533     0.108
        4617.3         2.450     0.101
        4691.3         0.000     0.000
        4981.7        18.916     0.195
        4991.1        15.790     0.229
        4999.5        12.664     0.166
        5014.3         0.000     0.000
        5022.9         3.346     0.096
        5036.5         0.000     0.000
        5173.7         3.636     0.102
        5193.0         5.308     0.105"""
            # Deleted due to no line
            # TiII  4417.714  1.165  -1.230          -1.430      32.10  0.35  2.73  0.01
            # TiII  4464.449  1.161  -1.810          -2.080      11.61  0.27  2.73  0.01
            # TiII  4470.853  1.165  -2.060          -2.280       5.66  0.10  2.64  0.01
            # TiII  4533.960  1.237  -0.540          -0.770     59.54  1.28  2.66  0.03
            # TiII  4563.757  1.221  -0.790          -0.960      49.56  0.41  2.69  0.01
            # TiII  5188.687  1.582  -1.050          -1.220      21.25  0.34  2.66  0.01
            # TiII  5226.538  1.566  -1.260          -1.290      15.23  0.18  2.67  0.01
            # blended (below)
            # TiII  4394.059  1.221  -1.770          -1.784      11.06  0.40  2.73  0.02
            data144ti2 = """2474.2        16.588     0.479
        2517.4         0.000     0.000
        2571.0        49.930     1.408
        2581.7         0.000     0.000
        2717.3         0.000     0.000
        2725.8        16.545     0.478
        2761.3        17.913     0.362
        2784.6        11.018     0.339
        2806.5         0.000     0.000
        2820.4         0.000     0.000
        2832.2        73.872     0.669
        2841.9        57.579     0.633
        2853.9         0.000     0.000
        2862.3        39.353     0.691
        2884.1        53.627     0.743
        2888.9        35.823     1.749
        3017.2         0.000     0.000
        3029.7        35.125     0.496
        3046.7        33.755     0.442
        3056.7        39.140     0.490
        3058.1        46.472     0.431
        3071.2         0.000     0.000
        3089.4        36.812     0.592
        3103.8        39.238     0.476
        3105.1        45.552     0.652
        3106.2        56.597     0.684
        3110.1         9.683     0.737
        3117.7         0.000     0.000
        3119.8         0.000     0.000
        3122.1         0.000     0.000
        3144.7         0.000     0.000
        3154.2        74.321     0.566
        3184.1        20.083     0.383
        3195.7        17.194     0.538
        3197.5        43.688     1.099
        3203.4        52.338     1.250
        3213.1        29.684     0.979
        3214.8         0.000     0.000
        3224.2        49.048     0.612
        3226.8        53.110     1.526
        3236.1         0.000     0.000
        3249.4         0.000     0.000
        3263.7        23.765     0.297
        3271.6         0.000     0.000
        3272.1        52.508     1.251
        3275.3        16.374     0.279
        3276.8         0.000     0.000
        3277.0        16.969     0.235
        3278.3        50.905     0.561
        3280.0        22.024     0.275
        3282.3        47.776     0.533
        3287.7         0.000     0.000
        3288.1         0.000     0.000
        3288.4        18.911     0.466
        3288.6        27.089     0.771
        3301.7         0.000     0.000
        3302.1        19.755     0.248
        3307.7        14.970     0.215
        3308.8        66.696     0.739
        3309.5        12.151     0.208
        3315.3        39.956     0.449
        3318.0        72.373     0.513
        3319.1         7.919     0.193
        3321.7        49.207     0.546
        3337.8        17.151     0.226
        3343.8        68.002     0.475
        3348.8        69.050     2.390
        3352.1        21.122     0.274
        3369.2        13.929     0.219
        3374.3        24.712     3.943
        3379.9         0.000     0.000
        3388.8         0.000     0.000
        3407.2        44.831     0.623
        3409.8        45.101     0.538
        3417.0         9.988     0.204
        3422.7         0.000     0.000
        3452.5        11.867     0.266
        3456.4        24.325     0.288
        3461.5        80.096     5.435
        3477.2        77.982     0.840
        3489.7        46.395     0.573
        3491.0        71.993     0.686
        3500.3        35.313     0.400
        3504.9        49.854     0.624
        3520.3        21.796     0.483
        3533.9         3.172     0.148
        3535.4        27.127     0.313
        3561.6        15.988     0.270
        3573.7        35.594     2.193
        3596.0        52.056     0.556
        3706.2         0.000     0.000
        3741.6        53.184     0.610
        3748.0         0.000     0.000
        3757.7        37.523     0.387
        3759.3       111.636     0.687
        3761.3       108.670     0.656
        3761.9         8.304     0.153
        3774.6         0.000     0.000
        3776.1         0.000     0.000
        3786.3         8.394     0.529
        3813.4        25.384     0.279
        3882.3         0.000     0.000
        3900.5        69.866     0.725
        3913.5        65.483     1.049
        3982.0         8.381     0.143
        3987.6         5.223     0.142
        4012.4        34.284     0.336
        4025.1        18.395     0.199
        4028.3        12.998     0.195
        4053.8         9.145     0.147
        4161.5         7.348     0.147
        4163.6        14.121     0.184
        4171.9        10.990     0.155
        4290.2        46.801     0.436
        4300.0        67.900     0.754
        4301.9        38.424     0.525
        4312.9         0.000     0.000
        4315.0         0.000     0.000
        4316.8         2.012     0.104
        4321.0        11.160     0.171
        4330.2         0.000     0.000
        4330.7         6.467     0.124
        4367.7         0.000     0.000
        4391.0         0.000     0.000
        4394.1        11.500     0.148
        4395.8         0.000     0.000
        4409.5         0.000     0.000
        4418.3         7.433     0.138
        4421.9         1.688     0.103
        4443.8        61.977     0.401
        4444.6         5.172     0.115
        4468.5        64.215     0.414
        4488.3         1.828     0.100
        4493.5         1.295     0.096
        4501.3        58.311     0.390
        4518.3         3.297     0.114
        4545.1         3.575     0.107
        4549.6         0.000     0.000
        4552.3         0.000     0.000
        4572.0        53.657     0.361
        4583.4         1.635     0.099
        4609.3         0.000     0.000
        4657.2         3.385     0.103
        4708.7         3.855     0.113
        4719.5         0.000     0.000
        4762.8         0.000     0.000
        4763.9         3.939     0.104
        4764.5         1.504     0.102
        4798.5         2.616     0.167
        4865.6         0.000     0.000
        4874.0         0.000     0.000
        4911.2         0.000     0.000
        5005.2         0.000     0.000
        5013.7         2.117     0.103
        5069.1         0.000     0.000
        5072.3         0.000     0.000
        5129.2         6.935     0.136
        5185.9         4.998     0.104
        5211.5         1.178     0.085
        5336.8         7.759     0.118
        5381.0         3.967     0.104
        5396.2         0.000     0.000
        5418.8         3.381     0.105
        6680.1         0.000     0.000
        9432.2         0.000     0.000"""
            ewdict = {}

            energylist = []
            gflist = []
            wllist = []
            equivwidthlist = []
            abund_list = []

            if ti2:
                # abund data
                data144 = dataabundti2
                # ew data
                tiews = data144ti2

            else:
                data144 = dataabundti1
                tiews = data144ti1
            # Making the dictionary of equiv widths with karin's ews to use its wavelengths to compare to the ones in lit.
            for line in (tiews.split("\n")):
                ewdict[float(line.split()[0])] = float(line.split()[1])
            print(ewdict)

            # Species  λ(Å)  χex(eV) log gfVALD     gfNIST    EW(mÅ)  σEW(mÅ) A(X) σA(X)

            for line in (data144.split("\n")):
                split = line.split()
                wl = float(split[1])
                # Only use the ones in both Karin's and lit
                gf = float(split[3])
                try:
                    equivwidth = ewdict[round(wl, 1)]
                except KeyError:
                    continue

                if equivwidth == 0.0:
                    continue
                print(equivwidth)

                wllist.append(wl)
                # Go from mAA to AA
                gflist.append(gf)
                energylist.append(float(split[2]))

                equivwidthlist.append(equivwidth / 1000)
                # Lte abundance
                lte = float(split[-1])
                abund_list.append(lte)

            return wllist, equivwidthlist, abund_list, gflist, energylist




        # equivwidthlist is a list of literature equivalent widths that we can compare to i nthe final plot
        if star == "sun" or star_number == 14:
            # get lines from scott to plot
            lines, equivwidthlist, nlteabund, lteabund = get_scott_data()
        elif star == "140283" or star_number == 16:
            lines, equivwidthlist, lteabund = get_144()
        elif star == "84937" or star_number == 17:
            lines, equivwidthlist, lteabund, gflist, energylist = get_84()
        elif star == "140283Karin":
            lines, equivwidthlist, lteabund, gflist, energylist = get_144Karin()
        elif star == "122563":
            lines, equivwidthlist, lteabund, gflist, energylist = get_122()
        elif star_number == 7 or star_number == 8 or star_number == 9 or star_number == 10 or star_number == 18:
            lines, equivwidthlist, lteabund, gflist, energylist = get_122_kaulkyselectrons()

        elif star_number == 6 or star_number == 11 or star_number == 12 or star_number == 13 or star_number == 15:
            lines, equivwidthlist, lteabund, gflist, energylist = get_arcturus_karin()
        elif star_number == 1 :
            lines, equivwidthlist, lteabund, gflist, energylist = get_arcturus()
        elif star == "chris":
            lines, equivwidthlist, nlteabund, lteabund = get_chris_data()

        # for plotting a comparison of equiv widths and their wavelengths so we can compare due to an annoying 5000aa line.
        wavelength_dict = {}
        ew_dict = {}

        # run for each abundance folder we ran through balder.
        for abundance in abundances_string:
            count = 0
            wavelength_dict[abundance] = []
            ew_dict[abundance] = []
            # new list for equiv widths for each abundance
            ew_list = []
            if k == "":
                folder = star + "\TiRun_Nq140k_k0005_" + abundance + "Abund"

            else:
                folder = star + "\TiRun_Nq140k_k" + k + "_" + abundance + "Abund"
            # folder = "TiRun_Nq140k_k0005_TenthQmaxAtom2"
            # folder = "TiRun_Nq140k_k0005_TenthQmaxAtom2"
            if star == "chris":
                folder = star +"\\Abund" + abundance
            output = r"D:\PhD\TiFeAtoms\Jack\balder\Balder_outputs\\" + folder + "\\output\\"
            sp = readsp(output + 'sp2')
            out = readdet(output + 'detailed_marcs_sun', sp=sp)
            if lte:
                iet = readie(output + 'ietl_marcs_sun', out=out, mode=Mode)
                iec = readie(output + 'iecl_marcs_sun', out=out, mode=Mode)
            else:
                iet = readie(output + 'iet_marcs_sun', out=out, mode=Mode)
                iec = readie(output + 'iec_marcs_sun', out=out, mode=Mode)

            fluxlistt = []
            fluxlist2c = []
            import numpy as np

            print("c", sum(iec[-1]), "\n")
            print("t", sum(iet[-1]), "\n")
            print("ratio of intensity", sum(iet[-1]) / sum(iec[-1]), "\n")

            iet2 = np.copy(iet)
            iec2 = np.copy(iec)
            # HAcky way to replace disk centre intensity with the flux. Literally replaces that column if not for the sun
            if star != "sun" and star_number != 14:
                for x in range((out['nnu'])):
                    fluxlistt.append(sum(iet[:, x] * out['muz'] * out['wmu']))
                    fluxlist2c.append(sum(iec[:, x] * out['muz'] * out['wmu']))
                iet[-1] = np.asarray(fluxlistt)
                iec[-1] = np.asarray(fluxlist2c)
            print("c", sum(iec[-1]), "\n")
            print("t", sum(iet[-1]), "\n")
            print("ratio of flux", sum(iet2[-1]) / sum(iec2[-1]))
            print(out['muz'])
            # exit()
            # Changing wl from vac to air, but from m to AA first
            out['wl'] = out['wl'] * 1E10
            air_wave = Vac2Air(out['wl'])

            # non isotopic solitting of ti2 lines
            """if ti2:
                lines = [4409.52, 4657.212, 4719.533]"""

            # lines = [2325.77, 8426.504]
            lower_val = [x - 0.5 for x in lines]
            upper_val = [x + 0.5 for x in lines]
            if star == "chris" or star == "122563" or star == "140283" or star == "sun":
                lower_val = [x - 0.2 for x in lines]
                upper_val = [x + 0.2 for x in lines]

            loop_count = 0
            for lower_val, upper_val in zip(lower_val, upper_val):
                if lines[loop_count] == 4417.714:
                    lower_val -=0.19
                    upper_val-=0.4

                if lines[loop_count] == 4999.5:
                    lower_val-=0.6
                    upper_val+= 0.6
                elif lines[loop_count] == 5739.5:
                    upper_val-= 0.2
                    # for chris now

                elif lines[loop_count] == 3741.06:
                    upper_val -=0.1
                elif lines[loop_count] == 3229.42:
                    lower_val +=0.1
                elif lines[loop_count] == 3236.57:
                    lower_val-=0.2
                    upper_val+= 0.2
                elif lines[loop_count] == 3239.04:
                    lower_val-=0.2
                    upper_val+= 0.2
                elif lines[loop_count] == 3241.98:
                    lower_val -= 0.14
                    upper_val += 0.14
                elif lines[loop_count] == 3276.77:
                    upper_val-= 0.1

                elif lines[loop_count] == 3321.70:
                    lower_val+=0.11
                elif lines[loop_count] == 3288.43:
                    upper_val-=0.11
                elif lines[loop_count] == 3341.88:
                    lower_val -= 0.1

                elif lines[loop_count] == 3349.40:
                    upper_val += 0.1
                    lower_val -= 0.1
                elif lines[loop_count] == 3372.79:
                    upper_val+=0.15
                    lower_val -= 0.15
                elif lines[loop_count] == 3477.18:
                    lower_val += 0.14
                elif lines[loop_count] == 3759.29:
                    lower_val -= 0.1
                    upper_val += 0.1
                elif lines[loop_count] == 3761.32:
                    lower_val-=0.1
                    upper_val+=0.1

                # For HD140283
                if lines[loop_count] == 3759.3:
                    lower_val -=0.2
                    upper_val+=0.2
                if lines[loop_count] == 3761.3:
                    lower_val -=0.2
                    upper_val+=0.2


                print("\n\nWorking on", lower_val, "-", upper_val)

                # Limits the wavelengths to our selection (vacuum). L stands for Limit, so limx is limited x value
                lindex = np.where(np.logical_and(air_wave < upper_val, air_wave > lower_val))
                print("In a vacuum, it's line", out['wl'][lindex])
                print("Scott's line is", lines[loop_count])
                loop_count += 1

                limx = air_wave[lindex]
                limy = (iet[-1, :] / iec[-1, :])[lindex]
                print("intensity", limy)
                limy2 = (iet2[-1, :] / iec2[-1, :])[lindex]
                print("flux", limy2)
                """plt.plot(limx, limy)
                plt.plot(limx, limy2, color="green")
                plt.show()"""

                # exit()
                # Can't interpolate a cubic with 3 points, so we move on. Not real lines anyway.
                if len(limx) < 4:
                    print("Limx cancelled here due to too few points")
                    print(limx, lower_val, upper_val)
                    exit()

                """vac_lower = 4281
                vac_upper = 4285
                # Now we have the AirWavelength, we want to constrain the wavelengths further as we can be more accurate now.
                lindex = np.where(np.logical_and(limx < vac_upper, limx > vac_lower))
                limx = limx[lindex]
                limy = limy[lindex]
        
        
                limx = Vac2Air(limx)
                limy = Vac2Air(limy)"""

                spec1d = Spectrum1D(spectral_axis=limx * u.AA, flux=limy * u.Jy)
                ew = analysis.equivalent_width(spec1d)
                # if a tiny ew appears, it's not a real line, and just continuum fluctuations.
                if ew.value < 1E-4:
                    print("Ew value too low, it's at", ew)
                    print("Delete", out['wl'][lindex], "from the linelist to continue")
                    exit()

                # Dictionary of the median wavelength of the spectra, to plot as x axis.
                wavelength_dict[abundance].append((upper_val + lower_val) / 2)

                ew_list.append((ew.value))
                ew_dict[abundance].append((ew.value))

                interp_eq = UnivariateSpline(np.flip(limx), np.flip(limy), s=0)
                xrange = np.arange(lower_val, upper_val, (upper_val - lower_val) / 1000)

                interp_spec = Spectrum1D(spectral_axis=xrange * u.AA, flux=interp_eq(xrange) * u.Jy)
                interp_ew = analysis.equivalent_width(interp_spec)
                print("EW value of", (ew.value))
                print("green EW value of", interp_ew)
                if star != "sun" and star_number != 14:
                    if star == "84937":
                        ew_corrected = equivwidthlist[count]
                    else:
                        ew_corrected = equivwidthlist[count]

                    print("Literature EW of ", ew_corrected)
                    plt.figtext(0.2, 0.54, "Lit EW: " + str(np.round(ew_corrected, 5)))
                plt.figtext(0.2, 0.14, "EW: " + str(np.round((ew.value), 8)))

                # plt.figtext(0.2, 0.34, "Interpolated EW: " + str(np.round(interp_ew, 8)))
                plt.title(folder)
                plt.plot(xrange, interp_eq(xrange), color="green", label="Spline interpolation")
                plt.plot(limx, limy, marker='o')
                import os
                isExist = os.path.exists(r"D:\PhD\TiFeAtoms\Jack\balder\Balder_outputs\graphs\\" + star + "\spectra\\" + abundance)
                if not isExist:
                    os.makedirs(r"D:\PhD\TiFeAtoms\Jack\balder\Balder_outputs\graphs\\" + star + "\spectra\\" + abundance)
                plt.show(block=False)
                plt.pause(0.001)

                plt.savefig(
                    r"D:\PhD\TiFeAtoms\Jack\balder\Balder_outputs\graphs\\" + star + "\spectra\\" + abundance + "\\" + k + "line" + str(
                        int(np.round(lines[loop_count-1]*100))) + ".png")
                plt.close()
                plt.cla()
                plt.clf()
                count += 1

            # Despite the name they're just for equiv widths at different abundances.
            abund_dict[abundance] = ew_list

        # plots all equiv widths for all abundances, 1 per line.
        for abund in wavelength_dict.keys():
            floatabund = float(abund) / 100
            print(len(wavelength_dict[abund]), len(ew_dict[abund]))
            plt.plot(wavelength_dict[abund], ew_dict[abund], label="Abundance: " + str(floatabund))
        print(wavelength_dict, equivwidthlist, wavelength_dict[abundances_string[0]])
        # plots the literature abundances from the equivalent widths at each abundance given by the literature vs the wavelength values at each abundance.
        if star == "140283":
            plt.plot(wavelength_dict[abundances_string[0]], equivwidthlist, "--", color="red", label="Literature abundance")
        if star_number == 4 or star_number == 5 or star_number == 2 or star_number == 1 or star_number == 6 or star_number == 9:
            plt.plot(wavelength_dict[abundances_string[0]], equivwidthlist, "--", color="red", label="Literature abundance")

        pickle.dump(wavelength_dict, open("testwavexgood", "wb"))
        pickle.dump(ew_dict, open("testequivygood", "wb"))
        print(wavelength_dict, ew_dict)
        plt.ylabel("Equivalent widths")
        plt.xlabel("Wavelength in air (AA)")
        if lte:
            te = "LTE"
        else:
            te = "NLTE"
        if ti2:
            ti = "Ti2"
        else:
            ti = "Ti1"
        if k == "":
            plt.title(str(te) + " Equivalent widths of lines at k = 0.005")
        else:
            plt.title(str(te) + " Equivalent widths of lines at k = " + str(k))

        plt.legend()
        isExist = os.path.exists(
            r"D:\PhD\TiFeAtoms\Jack\balder\Balder_outputs\graphs\\" + star + "\spectra\\" + ti + "\\")
        if not isExist:
            os.makedirs(r"D:\PhD\TiFeAtoms\Jack\balder\Balder_outputs\graphs\\" + star + "\spectra\\" + ti + "\\")

        plt.savefig(
            r"D:\PhD\TiFeAtoms\Jack\balder\Balder_outputs\graphs\\" + star + "\spectra\\" + ti + "\\" + k + te + "equivWidthsofAllLines.png")
        plt.show(block=False)
        plt.pause(0.01)

        plt.close()
        plt.cla()
        plt.clf()

        if k == "0001":
            pass
        else:
            k = ""

        # Despite the names they're just for equiv widths at different abundances.
        if lte:
            if ti2:
                pickle.dump(abund_dict, open(
                    r"D:\PhD\TiFeAtoms\Jack\balder\Balder_outputs\\" + star + "\\" + k + "Ti2_EquivWidths_AbundancesLTE.pkl",
                    "wb"))
            else:
                pickle.dump(abund_dict, open(
                    r"D:\PhD\TiFeAtoms\Jack\balder\Balder_outputs\\" + star + "\\" + k + "EquivWidths_AbundancesLTE.pkl", "wb"))
        else:
            if ti2:
                pickle.dump(abund_dict, open(
                    r"D:\PhD\TiFeAtoms\Jack\balder\Balder_outputs\\" + star + "\\" + k + "Ti2_EquivWidths_AbundancesNLTE.pkl",
                    "wb"))
            else:
                pickle.dump(abund_dict, open(
                    r"D:\PhD\TiFeAtoms\Jack\balder\Balder_outputs\\" + star + "\\" + k + "EquivWidths_AbundancesNLTE.pkl",
                    "wb"))